import e from"utilise/emitterify";import t from"utilise/key";import o from"utilise/set";import r from"utilise/is";import i from"utilise/log";import n from"utilise/err";import s from"utilise/deb";import m from"utilise/file";import l from"utilise/update";import u from"browserify";import p from"find-package-json";import a from"path";import f from"browser-resolve";var d="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var c={};c=function(e,{}={}){h("creating");const from=async({data:t})=>{if("SUBSCRIBE"!=t.type)return req;const o=t.value,r=e("npm");o in r.modules||S(`modules.${o}`,await bundle(o))(r);return stream(subset(`modules.${o}`,r)).map(()=>({exec:(e,{module:t,bundle:o})=>{const r={};new Function("module","exports",o)(r,{});e.next({type:"update",key:t,value:r.exports})},value:{module:o,bundle:r.modules[o]}})).unpromise()};e("npm",{modules:{}},{from:from});return e};const bundle=e=>new Promise((t,o)=>B(bresolve(e),{standalone:e}).bundle((e,r)=>e?o(e):t(r.toString())));const y=e;const v=t;const b=o;const g=r;const subset=(e,{destroy:t=true}={})=>o=>{if(!g.def(e))return o;const r=v(e,v(e)(o))(y());o.on("change").filter(({key:t=""})=>~t.indexOf(e)).map(e=>b(e)(r)).until(r.once("stop"));r.once("stop").filter(e=>t).map(e=>o.emit("stop"));return r};const stream=(e,{destroy:t=true,id:o}={})=>y(e).on("value").on("start",(function(){this.next({type:"update",value:e});e.on("change").map((this||d).next).until(this.once("stop"));this.once("stop").filter(e=>t).map(t=>e.emit("stop"))}));const h=i("[ri/npm]"),x=n("[ri/npm]"),w=s("[ri/npm]"),k=m,S=l,B=u,{browser:T={}}=p().next().value,{resolve:$}=a,bresolve=e=>f.sync(e,{filename:$(".","./foo")});var j=c;export default j;

