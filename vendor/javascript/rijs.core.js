import e from"utilise/emitterify";import r from"utilise/colorfill";import t from"utilise/identity";import s from"utilise/header";import i from"utilise/values";import o from"utilise/key";import p from"utilise/is";import n from"utilise/to";import l from"utilise/za";import c from"utilise/includes";import a from"utilise/err";import u from"utilise/log";import m from"utilise/deb";var d={};d={header:"text/plain",check(e){return!f(".html")(e.name)&&!f(".css")(e.name)&&y.str(e.body)}};const f=c,y=p;var h=d;var b={};b=function core({aliases:e={}}={}){B("creating");ripple.resources={};ripple.link=link(ripple);ripple.register=ripple;ripple.types=types();return linkify(g(ripple),e);function ripple(e,r,t){return e?O.arr(e)?e.map(ripple):O.promise(e)?e.then(ripple).catch(A):O.obj(e)&&!e.name?ripple(x(e)):O.fn(e)&&e.resources?ripple(x(e.resources)):O.str(e)&&!r&&ripple.resources[e]?ripple.resources[e].body:!O.str(e)||r||ripple.resources[e]?O.str(e)&&r?register(ripple)({name:e,body:r,headers:t}):O.obj(e)?register(ripple)(e):(A("could not find or create resource",e),false):void 0:ripple}};const register=e=>({name:r,body:t,headers:s={}})=>{r=e.aliases.src[r]||r;if(O.promise(t))return t.then(t=>register(e)({name:r,body:t,headers:s})).catch(A);C("registering",r);const i=normalise(e)({name:r,body:t,headers:s});if(!i)return A("failed to register",r),false;e.resources[r]=i;e.emit("change",[r,{type:"update",value:i.body,time:now(i)}]);return e.resources[r].body};const normalise=e=>r=>{j("content-type")(r)||x(e.types).sort(q("priority")).some(contentType(r));return j("content-type")(r)?parse(e)(r):(A("could not understand resource",r),false)};const parse=e=>r=>{var t=j("content-type")(r);return e.types[t]?(e.types[t].parse||k)(r):(A("could not understand type",t),false)};const contentType=e=>r=>r.check(e)&&(e.headers["content-type"]=r.header);const types=()=>[w].reduce(P.obj("header"),1);const linkify=(e,r)=>{e.aliases={dst:{},src:{}};for(const t in r)e.link(r[t],t);return e};const link=e=>(r,t)=>{if(!(r in e.resources)||t!=e.aliases.src[r]){e.aliases.src[r]=t;e.aliases.dst[t]=r;Object.defineProperty(e.resources,r,{get(){return e.resources[t]},set(r){e.resources[t]=r},configurable:true})}};const g=e,v=r,k=t,j=s,x=i,z=o,O=p,P=n,q=l,w=h,A=a("[ri/core]"),B=u("[ri/core]"),C=m("[ri/core]"),now=(e,r)=>(r=z("body.log.length")(e),O.num(r)?r-1:r);var D=b;export default D;

