import{i as e,v as t,S as s,s as n,m as i,a as r,b as o,c as a,d as c,e as l,f as u,P as f,Y as h,g as p,h as d,t as m,j as y,k as g,M as b,l as k,n as w,o as v,p as S,q as E,r as N,N as A,D as T,u as I,w as L,A as O,x,y as C,z as _,B as P,C as D,E as B,F as M,G as $,H as q,I as K}from"../_/1C492c6j.js";const j={"!":"%21",",":"%2C","[":"%5B","]":"%5D","{":"%7B","}":"%7D"};const escapeTagName=e=>e.replace(/[!,[\]{}]/g,(e=>j[e]));class Directives{constructor(e,t){this.docStart=null;this.docEnd=false;this.yaml=Object.assign({},Directives.defaultYaml,e);this.tags=Object.assign({},Directives.defaultTags,t)}clone(){const e=new Directives(this.yaml,this.tags);e.docStart=this.docStart;return e}atDocument(){const e=new Directives(this.yaml,this.tags);switch(this.yaml.version){case"1.1":this.atNextDocument=true;break;case"1.2":this.atNextDocument=false;this.yaml={explicit:Directives.defaultYaml.explicit,version:"1.2"};this.tags=Object.assign({},Directives.defaultTags);break}return e}
/**
     * @param onError - May be called even if the action was successful
     * @returns `true` on success
     */add(e,t){if(this.atNextDocument){this.yaml={explicit:Directives.defaultYaml.explicit,version:"1.1"};this.tags=Object.assign({},Directives.defaultTags);this.atNextDocument=false}const s=e.trim().split(/[ \t]+/);const n=s.shift();switch(n){case"%TAG":{if(s.length!==2){t(0,"%TAG directive should contain exactly two parts");if(s.length<2)return false}const[e,n]=s;this.tags[e]=n;return true}case"%YAML":{this.yaml.explicit=true;if(s.length!==1){t(0,"%YAML directive should contain exactly one part");return false}const[e]=s;if(e==="1.1"||e==="1.2"){this.yaml.version=e;return true}{const s=/^\d+\.\d+$/.test(e);t(6,`Unsupported YAML version ${e}`,s);return false}}default:t(0,`Unknown directive ${n}`,true);return false}}
/**
     * Resolves a tag, matching handles to those defined in %TAG directives.
     *
     * @returns Resolved tag, which may also be the non-specific tag `'!'` or a
     *   `'!local'` tag, or `null` if unresolvable.
     */tagName(e,t){if(e==="!")return"!";if(e[0]!=="!"){t(`Not a valid tag: ${e}`);return null}if(e[1]==="<"){const s=e.slice(2,-1);if(s==="!"||s==="!!"){t(`Verbatim tags aren't resolved, so ${e} is invalid.`);return null}e[e.length-1]!==">"&&t("Verbatim tags must end with a >");return s}const[,s,n]=e.match(/^(.*!)([^!]*)$/s);n||t(`The ${e} tag has no suffix`);const i=this.tags[s];if(i)try{return i+decodeURIComponent(n)}catch(e){t(String(e));return null}if(s==="!")return e;t(`Could not resolve tag: ${e}`);return null}tagString(e){for(const[t,s]of Object.entries(this.tags))if(e.startsWith(s))return t+escapeTagName(e.substring(s.length));return e[0]==="!"?e:`!<${e}>`}toString(s){const n=this.yaml.explicit?[`%YAML ${this.yaml.version||"1.2"}`]:[];const i=Object.entries(this.tags);let r;if(s&&i.length>0&&e(s.contents)){const n={};t(s.contents,((t,s)=>{e(s)&&s.tag&&(n[s.tag]=true)}));r=Object.keys(n)}else r=[];for(const[e,t]of i)e==="!!"&&t==="tag:yaml.org,2002:"||s&&!r.some((e=>e.startsWith(t)))||n.push(`%TAG ${e} ${t}`);return n.join("\n")}}Directives.defaultYaml={explicit:false,version:"1.2"};Directives.defaultTags={"!!":"tag:yaml.org,2002:"};const F={identify:e=>e==null,createNode:()=>new s(null),default:true,tag:"tag:yaml.org,2002:null",test:/^(?:~|[Nn]ull|NULL)?$/,resolve:()=>new s(null),stringify:({source:e},t)=>typeof e==="string"&&F.test.test(e)?e:t.options.nullStr};const U={identify:e=>typeof e==="boolean",default:true,tag:"tag:yaml.org,2002:bool",test:/^(?:[Tt]rue|TRUE|[Ff]alse|FALSE)$/,resolve:e=>new s(e[0]==="t"||e[0]==="T"),stringify({source:e,value:t},s){if(e&&U.test.test(e)){const s=e[0]==="t"||e[0]==="T";if(t===s)return e}return t?s.options.trueStr:s.options.falseStr}};const Y={identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:e=>e.slice(-3).toLowerCase()==="nan"?NaN:e[0]==="-"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:n};const R={identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:\.[0-9]+|[0-9]+(?:\.[0-9]*)?)[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e),stringify(e){const t=Number(e.value);return isFinite(t)?t.toExponential():n(e)}};const V={identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:\.[0-9]+|[0-9]+\.[0-9]*)$/,resolve(e){const t=new s(parseFloat(e));const n=e.indexOf(".");n!==-1&&e[e.length-1]==="0"&&(t.minFractionDigits=e.length-n-1);return t},stringify:n};const intIdentify$2=e=>typeof e==="bigint"||Number.isInteger(e);const intResolve$1=(e,t,s,{intAsBigInt:n})=>n?BigInt(e):parseInt(e.substring(t),s);function intStringify$1(e,t,s){const{value:i}=e;return intIdentify$2(i)&&i>=0?s+i.toString(t):n(e)}const G={identify:e=>intIdentify$2(e)&&e>=0,default:true,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^0o[0-7]+$/,resolve:(e,t,s)=>intResolve$1(e,2,8,s),stringify:e=>intStringify$1(e,8,"0o")};const H={identify:intIdentify$2,default:true,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9]+$/,resolve:(e,t,s)=>intResolve$1(e,0,10,s),stringify:n};const W={identify:e=>intIdentify$2(e)&&e>=0,default:true,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^0x[0-9a-fA-F]+$/,resolve:(e,t,s)=>intResolve$1(e,2,16,s),stringify:e=>intStringify$1(e,16,"0x")};const X=[i,r,o,F,U,G,H,W,Y,R,V];function intIdentify$1(e){return typeof e==="bigint"||Number.isInteger(e)}const stringifyJSON=({value:e})=>JSON.stringify(e);const J=[{identify:e=>typeof e==="string",default:true,tag:"tag:yaml.org,2002:str",resolve:e=>e,stringify:stringifyJSON},{identify:e=>e==null,createNode:()=>new s(null),default:true,tag:"tag:yaml.org,2002:null",test:/^null$/,resolve:()=>null,stringify:stringifyJSON},{identify:e=>typeof e==="boolean",default:true,tag:"tag:yaml.org,2002:bool",test:/^true|false$/,resolve:e=>e==="true",stringify:stringifyJSON},{identify:intIdentify$1,default:true,tag:"tag:yaml.org,2002:int",test:/^-?(?:0|[1-9][0-9]*)$/,resolve:(e,t,{intAsBigInt:s})=>s?BigInt(e):parseInt(e,10),stringify:({value:e})=>intIdentify$1(e)?e.toString():JSON.stringify(e)},{identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",test:/^-?(?:0|[1-9][0-9]*)(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+)?$/,resolve:e=>parseFloat(e),stringify:stringifyJSON}];const Q={default:true,tag:"",test:/^/,resolve(e,t){t(`Unresolved plain scalar ${JSON.stringify(e)}`);return e}};const z=[i,r].concat(J,Q);const Z={identify:e=>e instanceof Uint8Array,default:false,tag:"tag:yaml.org,2002:binary",resolve(e,t){if(typeof Buffer==="function")return Buffer.from(e,"base64");if(typeof atob==="function"){const t=atob(e.replace(/[\n\r]/g,""));const s=new Uint8Array(t.length);for(let e=0;e<t.length;++e)s[e]=t.charCodeAt(e);return s}t("This environment does not support reading binary tags; either Buffer or atob is required");return e},stringify({comment:e,type:t,value:n},i,r,o){const c=n;let l;if(typeof Buffer==="function")l=c instanceof Buffer?c.toString("base64"):Buffer.from(c.buffer).toString("base64");else{if(typeof btoa!=="function")throw new Error("This environment does not support writing binary tags; either Buffer or btoa is required");{let e="";for(let t=0;t<c.length;++t)e+=String.fromCharCode(c[t]);l=btoa(e)}}t||(t=s.BLOCK_LITERAL);if(t!==s.QUOTE_DOUBLE){const e=Math.max(i.options.lineWidth-i.indent.length,i.options.minContentWidth);const n=Math.ceil(l.length/e);const r=new Array(n);for(let t=0,s=0;t<n;++t,s+=e)r[t]=l.substr(s,e);l=r.join(t===s.BLOCK_LITERAL?"\n":" ")}return a({comment:e,type:t,value:l},i,r,o)}};function resolvePairs(e,t){if(c(e))for(let n=0;n<e.items.length;++n){let i=e.items[n];if(!l(i)){if(u(i)){i.items.length>1&&t("Each pair must have its own sequence indicator");const e=i.items[0]||new f(new s(null));i.commentBefore&&(e.key.commentBefore=e.key.commentBefore?`${i.commentBefore}\n${e.key.commentBefore}`:i.commentBefore);if(i.comment){const t=e.value??e.key;t.comment=t.comment?`${i.comment}\n${t.comment}`:i.comment}i=e}e.items[n]=l(i)?i:new f(i)}}else t("Expected a sequence for this tag");return e}function createPairs(e,t,s){const{replacer:n}=s;const i=new h(e);i.tag="tag:yaml.org,2002:pairs";let r=0;if(t&&Symbol.iterator in Object(t))for(let e of t){typeof n==="function"&&(e=n.call(t,String(r++),e));let o,a;if(Array.isArray(e)){if(e.length!==2)throw new TypeError(`Expected [key, value] tuple: ${e}`);o=e[0];a=e[1]}else if(e&&e instanceof Object){const t=Object.keys(e);if(t.length!==1)throw new TypeError(`Expected tuple with one key, not ${t.length} keys`);o=t[0];a=e[o]}else o=e;i.items.push(p(o,a,s))}return i}const ee={collection:"seq",default:false,tag:"tag:yaml.org,2002:pairs",resolve:resolvePairs,createNode:createPairs};class YAMLOMap extends h{constructor(){super();this.add=d.prototype.add.bind(this);this.delete=d.prototype.delete.bind(this);this.get=d.prototype.get.bind(this);this.has=d.prototype.has.bind(this);this.set=d.prototype.set.bind(this);this.tag=YAMLOMap.tag}toJSON(e,t){if(!t)return super.toJSON(e);const s=new Map;t?.onCreate&&t.onCreate(s);for(const e of this.items){let n,i;if(l(e)){n=m(e.key,"",t);i=m(e.value,n,t)}else n=m(e,"",t);if(s.has(n))throw new Error("Ordered maps must not include duplicate keys");s.set(n,i)}return s}static from(e,t,s){const n=createPairs(e,t,s);const i=new this;i.items=n.items;return i}}YAMLOMap.tag="tag:yaml.org,2002:omap";const te={collection:"seq",identify:e=>e instanceof Map,nodeClass:YAMLOMap,default:false,tag:"tag:yaml.org,2002:omap",resolve(e,t){const s=resolvePairs(e,t);const n=[];for(const{key:e}of s.items)y(e)&&(n.includes(e.value)?t(`Ordered maps must not include duplicate keys: ${e.value}`):n.push(e.value));return Object.assign(new YAMLOMap,s)},createNode:(e,t,s)=>YAMLOMap.from(e,t,s)};function boolStringify({value:e,source:t},s){const n=e?se:ne;return t&&n.test.test(t)?t:e?s.options.trueStr:s.options.falseStr}const se={identify:e=>e===true,default:true,tag:"tag:yaml.org,2002:bool",test:/^(?:Y|y|[Yy]es|YES|[Tt]rue|TRUE|[Oo]n|ON)$/,resolve:()=>new s(true),stringify:boolStringify};const ne={identify:e=>e===false,default:true,tag:"tag:yaml.org,2002:bool",test:/^(?:N|n|[Nn]o|NO|[Ff]alse|FALSE|[Oo]ff|OFF)$/,resolve:()=>new s(false),stringify:boolStringify};const ie={identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",test:/^(?:[-+]?\.(?:inf|Inf|INF)|\.nan|\.NaN|\.NAN)$/,resolve:e=>e.slice(-3).toLowerCase()==="nan"?NaN:e[0]==="-"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,stringify:n};const re={identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",format:"EXP",test:/^[-+]?(?:[0-9][0-9_]*)?(?:\.[0-9_]*)?[eE][-+]?[0-9]+$/,resolve:e=>parseFloat(e.replace(/_/g,"")),stringify(e){const t=Number(e.value);return isFinite(t)?t.toExponential():n(e)}};const oe={identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",test:/^[-+]?(?:[0-9][0-9_]*)?\.[0-9_]*$/,resolve(e){const t=new s(parseFloat(e.replace(/_/g,"")));const n=e.indexOf(".");if(n!==-1){const s=e.substring(n+1).replace(/_/g,"");s[s.length-1]==="0"&&(t.minFractionDigits=s.length)}return t},stringify:n};const intIdentify=e=>typeof e==="bigint"||Number.isInteger(e);function intResolve(e,t,s,{intAsBigInt:n}){const i=e[0];i!=="-"&&i!=="+"||(t+=1);e=e.substring(t).replace(/_/g,"");if(n){switch(s){case 2:e=`0b${e}`;break;case 8:e=`0o${e}`;break;case 16:e=`0x${e}`;break}const t=BigInt(e);return i==="-"?BigInt(-1)*t:t}const r=parseInt(e,s);return i==="-"?-1*r:r}function intStringify(e,t,s){const{value:i}=e;if(intIdentify(i)){const e=i.toString(t);return i<0?"-"+s+e.substr(1):s+e}return n(e)}const ae={identify:intIdentify,default:true,tag:"tag:yaml.org,2002:int",format:"BIN",test:/^[-+]?0b[0-1_]+$/,resolve:(e,t,s)=>intResolve(e,2,2,s),stringify:e=>intStringify(e,2,"0b")};const ce={identify:intIdentify,default:true,tag:"tag:yaml.org,2002:int",format:"OCT",test:/^[-+]?0[0-7_]+$/,resolve:(e,t,s)=>intResolve(e,1,8,s),stringify:e=>intStringify(e,8,"0")};const le={identify:intIdentify,default:true,tag:"tag:yaml.org,2002:int",test:/^[-+]?[0-9][0-9_]*$/,resolve:(e,t,s)=>intResolve(e,0,10,s),stringify:n};const ue={identify:intIdentify,default:true,tag:"tag:yaml.org,2002:int",format:"HEX",test:/^[-+]?0x[0-9a-fA-F_]+$/,resolve:(e,t,s)=>intResolve(e,2,16,s),stringify:e=>intStringify(e,16,"0x")};class YAMLSet extends d{constructor(e){super(e);this.tag=YAMLSet.tag}add(e){let t;t=l(e)?e:e&&typeof e==="object"&&"key"in e&&"value"in e&&e.value===null?new f(e.key,null):new f(e,null);const s=g(this.items,t.key);s||this.items.push(t)}get(e,t){const s=g(this.items,e);return!t&&l(s)?y(s.key)?s.key.value:s.key:s}set(e,t){if(typeof t!=="boolean")throw new Error("Expected boolean value for set(key, value) in a YAML set, not "+typeof t);const s=g(this.items,e);s&&!t?this.items.splice(this.items.indexOf(s),1):!s&&t&&this.items.push(new f(e))}toJSON(e,t){return super.toJSON(e,t,Set)}toString(e,t,s){if(!e)return JSON.stringify(this);if(this.hasAllNullValues(true))return super.toString(Object.assign({},e,{allNullValues:true}),t,s);throw new Error("Set items must all have null values")}static from(e,t,s){const{replacer:n}=s;const i=new this(e);if(t&&Symbol.iterator in Object(t))for(let e of t){typeof n==="function"&&(e=n.call(t,e,e));i.items.push(p(e,null,s))}return i}}YAMLSet.tag="tag:yaml.org,2002:set";const fe={collection:"map",identify:e=>e instanceof Set,nodeClass:YAMLSet,default:false,tag:"tag:yaml.org,2002:set",createNode:(e,t,s)=>YAMLSet.from(e,t,s),resolve(e,t){if(u(e)){if(e.hasAllNullValues(true))return Object.assign(new YAMLSet,e);t("Set items must all have null values")}else t("Expected a mapping for this tag");return e}};function parseSexagesimal(e,t){const s=e[0];const n=s==="-"||s==="+"?e.substring(1):e;const num=e=>t?BigInt(e):Number(e);const i=n.replace(/_/g,"").split(":").reduce(((e,t)=>e*num(60)+num(t)),num(0));return s==="-"?num(-1)*i:i}function stringifySexagesimal(e){let{value:t}=e;let num=e=>e;if(typeof t==="bigint")num=e=>BigInt(e);else if(isNaN(t)||!isFinite(t))return n(e);let s="";if(t<0){s="-";t*=num(-1)}const i=num(60);const r=[t%i];if(t<60)r.unshift(0);else{t=(t-r[0])/i;r.unshift(t%i);if(t>=60){t=(t-r[0])/i;r.unshift(t)}}return s+r.map((e=>String(e).padStart(2,"0"))).join(":").replace(/000000\d*$/,"")}const he={identify:e=>typeof e==="bigint"||Number.isInteger(e),default:true,tag:"tag:yaml.org,2002:int",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+$/,resolve:(e,t,{intAsBigInt:s})=>parseSexagesimal(e,s),stringify:stringifySexagesimal};const pe={identify:e=>typeof e==="number",default:true,tag:"tag:yaml.org,2002:float",format:"TIME",test:/^[-+]?[0-9][0-9_]*(?::[0-5]?[0-9])+\.[0-9_]*$/,resolve:e=>parseSexagesimal(e,false),stringify:stringifySexagesimal};const de={identify:e=>e instanceof Date,default:true,tag:"tag:yaml.org,2002:timestamp",test:RegExp("^([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})(?:(?:t|T|[ \\t]+)([0-9]{1,2}):([0-9]{1,2}):([0-9]{1,2}(\\.[0-9]+)?)(?:[ \\t]*(Z|[-+][012]?[0-9](?::[0-9]{2})?))?)?$"),resolve(e){const t=e.match(de.test);if(!t)throw new Error("!!timestamp expects a date, starting with yyyy-mm-dd");const[,s,n,i,r,o,a]=t.map(Number);const c=t[7]?Number((t[7]+"00").substr(1,3)):0;let l=Date.UTC(s,n-1,i,r||0,o||0,a||0,c);const u=t[8];if(u&&u!=="Z"){let e=parseSexagesimal(u,false);Math.abs(e)<30&&(e*=60);l-=6e4*e}return new Date(l)},stringify:({value:e})=>e.toISOString().replace(/((T00:00)?:00)?\.000Z$/,"")};const me=[i,r,o,F,se,ne,ae,ce,le,ue,ie,re,oe,Z,te,ee,fe,he,pe,de];const ye=new Map([["core",X],["failsafe",[i,r,o]],["json",z],["yaml11",me],["yaml-1.1",me]]);const ge={binary:Z,bool:U,float:V,floatExp:R,floatNaN:Y,floatTime:pe,int:H,intHex:W,intOct:G,intTime:he,map:i,null:F,omap:te,pairs:ee,seq:r,set:fe,timestamp:de};const be={"tag:yaml.org,2002:binary":Z,"tag:yaml.org,2002:omap":te,"tag:yaml.org,2002:pairs":ee,"tag:yaml.org,2002:set":fe,"tag:yaml.org,2002:timestamp":de};function getTags(e,t){let s=ye.get(t);if(!s){if(!Array.isArray(e)){const e=Array.from(ye.keys()).filter((e=>e!=="yaml11")).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown schema "${t}"; use one of ${e} or define customTags array`)}s=[]}if(Array.isArray(e))for(const t of e)s=s.concat(t);else typeof e==="function"&&(s=e(s.slice()));return s.map((e=>{if(typeof e!=="string")return e;const t=ge[e];if(t)return t;const s=Object.keys(ge).map((e=>JSON.stringify(e))).join(", ");throw new Error(`Unknown custom tag "${e}"; use one of ${s}`)}))}const sortMapEntriesByKey=(e,t)=>e.key<t.key?-1:e.key>t.key?1:0;class Schema{constructor({compat:e,customTags:t,merge:s,resolveKnownTags:n,schema:a,sortMapEntries:c,toStringDefaults:l}){this.compat=Array.isArray(e)?getTags(e,"compat"):e?getTags(null,e):null;this.merge=!!s;this.name=typeof a==="string"&&a||"core";this.knownTags=n?be:{};this.tags=getTags(t,this.name);this.toStringOptions=l??null;Object.defineProperty(this,b,{value:i});Object.defineProperty(this,k,{value:o});Object.defineProperty(this,w,{value:r});this.sortMapEntries=typeof c==="function"?c:c===true?sortMapEntriesByKey:null}clone(){const e=Object.create(Schema.prototype,Object.getOwnPropertyDescriptors(this));e.tags=this.tags.slice();return e}}function stringifyDocument(t,s){const n=[];let i=s.directives===true;if(s.directives!==false&&t.directives){const e=t.directives.toString(t);if(e){n.push(e);i=true}else t.directives.docStart&&(i=true)}i&&n.push("---");const r=v(t,s);const{commentString:o}=r.options;if(t.commentBefore){n.length!==1&&n.unshift("");const e=o(t.commentBefore);n.unshift(S(e,""))}let a=false;let c=null;if(t.contents){if(e(t.contents)){t.contents.spaceBefore&&i&&n.push("");if(t.contents.commentBefore){const e=o(t.contents.commentBefore);n.push(S(e,""))}r.forceBlockIndent=!!t.comment;c=t.contents.comment}const s=c?void 0:()=>a=true;let l=E(t.contents,r,(()=>c=null),s);c&&(l+=N(l,"",o(c)));l[0]!=="|"&&l[0]!==">"||n[n.length-1]!=="---"?n.push(l):n[n.length-1]=`--- ${l}`}else n.push(E(t.contents,r));if(t.directives?.docEnd)if(t.comment){const e=o(t.comment);if(e.includes("\n")){n.push("...");n.push(S(e,""))}else n.push(`... ${e}`)}else n.push("...");else{let e=t.comment;e&&a&&(e=e.replace(/^\n+/,""));if(e){a&&!c||n[n.length-1]===""||n.push("");n.push(S(o(e),""))}}return n.join("\n")+"\n"}class Document{constructor(e,t,s){this.commentBefore=null;this.comment=null;this.errors=[];this.warnings=[];Object.defineProperty(this,A,{value:T});let n=null;if(typeof t==="function"||Array.isArray(t))n=t;else if(s===void 0&&t){s=t;t=void 0}const i=Object.assign({intAsBigInt:false,keepSourceTokens:false,logLevel:"warn",prettyErrors:true,strict:true,uniqueKeys:true,version:"1.2"},s);this.options=i;let{version:r}=i;if(s?._directives){this.directives=s._directives.atDocument();this.directives.yaml.explicit&&(r=this.directives.yaml.version)}else this.directives=new Directives({version:r});this.setSchema(r,s);this.contents=e===void 0?null:this.createNode(e,n,s)}clone(){const t=Object.create(Document.prototype,{[A]:{value:T}});t.commentBefore=this.commentBefore;t.comment=this.comment;t.errors=this.errors.slice();t.warnings=this.warnings.slice();t.options=Object.assign({},this.options);this.directives&&(t.directives=this.directives.clone());t.schema=this.schema.clone();t.contents=e(this.contents)?this.contents.clone(t.schema):this.contents;this.range&&(t.range=this.range.slice());return t}add(e){assertCollection(this.contents)&&this.contents.add(e)}addIn(e,t){assertCollection(this.contents)&&this.contents.addIn(e,t)}createAlias(e,t){if(!e.anchor){const s=I(this);e.anchor=!t||s.has(t)?L(t||"a",s):t}return new O(e.anchor)}createNode(e,t,s){let n;if(typeof t==="function"){e=t.call({"":e},"",e);n=t}else if(Array.isArray(t)){const keyToStr=e=>typeof e==="number"||e instanceof String||e instanceof Number;const e=t.filter(keyToStr).map(String);e.length>0&&(t=t.concat(e));n=t}else if(s===void 0&&t){s=t;t=void 0}const{aliasDuplicateObjects:i,anchorPrefix:r,flow:o,keepUndefined:a,onTagObj:c,tag:l}=s??{};const{onAnchor:u,setAnchors:f,sourceObjects:h}=x(this,r||"a");const p={aliasDuplicateObjects:i??true,keepUndefined:a??false,onAnchor:u,onTagObj:c,replacer:n,schema:this.schema,sourceObjects:h};const d=C(e,l,p);o&&_(d)&&(d.flow=true);f();return d}createPair(e,t,s={}){const n=this.createNode(e,null,s);const i=this.createNode(t,null,s);return new f(n,i)}
/**
     * Removes a value from the document.
     * @returns `true` if the item was found and removed.
     */delete(e){return!!assertCollection(this.contents)&&this.contents.delete(e)}
/**
     * Removes a value from the document.
     * @returns `true` if the item was found and removed.
     */deleteIn(e){if(P(e)){if(this.contents==null)return false;this.contents=null;return true}return!!assertCollection(this.contents)&&this.contents.deleteIn(e)}get(e,t){return _(this.contents)?this.contents.get(e,t):void 0}getIn(e,t){return P(e)?!t&&y(this.contents)?this.contents.value:this.contents:_(this.contents)?this.contents.getIn(e,t):void 0}has(e){return!!_(this.contents)&&this.contents.has(e)}hasIn(e){return P(e)?this.contents!==void 0:!!_(this.contents)&&this.contents.hasIn(e)}set(e,t){this.contents==null?this.contents=D(this.schema,[e],t):assertCollection(this.contents)&&this.contents.set(e,t)}setIn(e,t){P(e)?this.contents=t:this.contents==null?this.contents=D(this.schema,Array.from(e),t):assertCollection(this.contents)&&this.contents.setIn(e,t)}setSchema(e,t={}){typeof e==="number"&&(e=String(e));let s;switch(e){case"1.1":this.directives?this.directives.yaml.version="1.1":this.directives=new Directives({version:"1.1"});s={merge:true,resolveKnownTags:false,schema:"yaml-1.1"};break;case"1.2":case"next":this.directives?this.directives.yaml.version=e:this.directives=new Directives({version:e});s={merge:false,resolveKnownTags:true,schema:"core"};break;case null:this.directives&&delete this.directives;s=null;break;default:{const t=JSON.stringify(e);throw new Error(`Expected '1.1', '1.2' or null as first argument, but found: ${t}`)}}if(t.schema instanceof Object)this.schema=t.schema;else{if(!s)throw new Error("With a null YAML version, the { schema: Schema } option is required");this.schema=new Schema(Object.assign(s,t))}}toJS({json:e,jsonArg:t,mapAsMap:s,maxAliasCount:n,onAnchor:i,reviver:r}={}){const o={anchors:new Map,doc:this,keep:!e,mapAsMap:s===true,mapKeyWarned:false,maxAliasCount:typeof n==="number"?n:100};const a=m(this.contents,t??"",o);if(typeof i==="function")for(const{count:e,res:t}of o.anchors.values())i(t,e);return typeof r==="function"?B(r,{"":a},"",a):a}
/**
     * A JSON representation of the document `contents`.
     *
     * @param jsonArg Used by `JSON.stringify` to indicate the array index or
     *   property name.
     */toJSON(e,t){return this.toJS({json:true,jsonArg:e,mapAsMap:false,onAnchor:t})}toString(e={}){if(this.errors.length>0)throw new Error("Document with errors cannot be stringified");if("indent"in e&&(!Number.isInteger(e.indent)||Number(e.indent)<=0)){const t=JSON.stringify(e.indent);throw new Error(`"indent" option must be a positive integer, not ${t}`)}return stringifyDocument(this,e)}}function assertCollection(e){if(_(e))return true;throw new Error("Expected a YAML collection as document contents")}class YAMLError extends Error{constructor(e,t,s,n){super();this.name=e;this.code=s;this.message=n;this.pos=t}}class YAMLParseError extends YAMLError{constructor(e,t,s){super("YAMLParseError",e,t,s)}}class YAMLWarning extends YAMLError{constructor(e,t,s){super("YAMLWarning",e,t,s)}}const prettifyError=(e,t)=>s=>{if(s.pos[0]===-1)return;s.linePos=s.pos.map((e=>t.linePos(e)));const{line:n,col:i}=s.linePos[0];s.message+=` at line ${n}, column ${i}`;let r=i-1;let o=e.substring(t.lineStarts[n-1],t.lineStarts[n]).replace(/[\n\r]+$/,"");if(r>=60&&o.length>80){const e=Math.min(r-39,o.length-79);o="…"+o.substring(e);r-=e-1}o.length>80&&(o=o.substring(0,79)+"…");if(n>1&&/^ *$/.test(o.substring(0,r))){let s=e.substring(t.lineStarts[n-2],t.lineStarts[n-1]);s.length>80&&(s=s.substring(0,79)+"…\n");o=s+o}if(/[^ ]/.test(o)){let e=1;const t=s.linePos[1];t&&t.line===n&&t.col>i&&(e=Math.max(1,Math.min(t.col-i,80-r)));const a=" ".repeat(r)+"^".repeat(e);s.message+=`:\n\n${o}\n${a}\n`}};function resolveProps(e,{flow:t,indicator:s,next:n,offset:i,onError:r,parentIndent:o,startOnNewline:a}){let c=false;let l=a;let u=a;let f="";let h="";let p=false;let d=false;let m=false;let y=null;let g=null;let b=null;let k=null;let w=null;let v=null;for(const i of e){if(m){i.type!=="space"&&i.type!=="newline"&&i.type!=="comma"&&r(i.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space");m=false}if(y){l&&i.type!=="comment"&&i.type!=="newline"&&r(y,"TAB_AS_INDENT","Tabs are not allowed as indentation");y=null}switch(i.type){case"space":t||s==="doc-start"&&n?.type==="flow-collection"||!i.source.includes("\t")||(y=i);u=true;break;case"comment":{u||r(i,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const e=i.source.substring(1)||" ";f?f+=h+e:f=e;h="";l=false;break}case"newline":l?f?f+=i.source:c=true:h+=i.source;l=true;p=true;(g||b)&&(d=true);u=true;break;case"anchor":g&&r(i,"MULTIPLE_ANCHORS","A node can have at most one anchor");i.source.endsWith(":")&&r(i.offset+i.source.length-1,"BAD_ALIAS","Anchor ending in : is ambiguous",true);g=i;v===null&&(v=i.offset);l=false;u=false;m=true;break;case"tag":b&&r(i,"MULTIPLE_TAGS","A node can have at most one tag");b=i;v===null&&(v=i.offset);l=false;u=false;m=true;break;case s:(g||b)&&r(i,"BAD_PROP_ORDER",`Anchors and tags must be after the ${i.source} indicator`);w&&r(i,"UNEXPECTED_TOKEN",`Unexpected ${i.source} in ${t??"collection"}`);w=i;l=s==="seq-item-ind"||s==="explicit-key-ind";u=false;break;case"comma":if(t){k&&r(i,"UNEXPECTED_TOKEN",`Unexpected , in ${t}`);k=i;l=false;u=false;break}default:r(i,"UNEXPECTED_TOKEN",`Unexpected ${i.type} token`);l=false;u=false}}const S=e[e.length-1];const E=S?S.offset+S.source.length:i;m&&n&&n.type!=="space"&&n.type!=="newline"&&n.type!=="comma"&&(n.type!=="scalar"||n.source!=="")&&r(n.offset,"MISSING_CHAR","Tags and anchors must be separated from the next token by white space");y&&(l&&y.indent<=o||n?.type==="block-map"||n?.type==="block-seq")&&r(y,"TAB_AS_INDENT","Tabs are not allowed as indentation");return{comma:k,found:w,spaceBefore:c,comment:f,hasNewline:p,hasNewlineAfterProp:d,anchor:g,tag:b,end:E,start:v??E}}function containsNewline(e){if(!e)return null;switch(e.type){case"alias":case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":if(e.source.includes("\n"))return true;if(e.end)for(const t of e.end)if(t.type==="newline")return true;return false;case"flow-collection":for(const t of e.items){for(const e of t.start)if(e.type==="newline")return true;if(t.sep)for(const e of t.sep)if(e.type==="newline")return true;if(containsNewline(t.key)||containsNewline(t.value))return true}return false;default:return true}}function flowIndentCheck(e,t,s){if(t?.type==="flow-collection"){const n=t.end[0];if(n.indent===e&&(n.source==="]"||n.source==="}")&&containsNewline(t)){const e="Flow end indicator should be more indented than parent";s(n,"BAD_INDENT",e,true)}}}function mapIncludes(e,t,s){const{uniqueKeys:n}=e.options;if(n===false)return false;const i=typeof n==="function"?n:(t,s)=>t===s||y(t)&&y(s)&&t.value===s.value&&!(t.value==="<<"&&e.schema.merge);return t.some((e=>i(e.key,s)))}const ke="All mapping items must start at the same column";function resolveBlockMap({composeNode:e,composeEmptyNode:t},s,n,i,r){const o=r?.nodeClass??d;const a=new o(s.schema);s.atRoot&&(s.atRoot=false);let c=n.offset;let l=null;for(const r of n.items){const{start:o,key:u,sep:h,value:p}=r;const d=resolveProps(o,{indicator:"explicit-key-ind",next:u??h?.[0],offset:c,onError:i,parentIndent:n.indent,startOnNewline:true});const m=!d.found;if(m){u&&(u.type==="block-seq"?i(c,"BLOCK_AS_IMPLICIT_KEY","A block sequence may not be used as an implicit map key"):"indent"in u&&u.indent!==n.indent&&i(c,"BAD_INDENT",ke));if(!d.anchor&&!d.tag&&!h){l=d.end;d.comment&&(a.comment?a.comment+="\n"+d.comment:a.comment=d.comment);continue}(d.hasNewlineAfterProp||containsNewline(u))&&i(u??o[o.length-1],"MULTILINE_IMPLICIT_KEY","Implicit keys need to be on a single line")}else d.found?.indent!==n.indent&&i(c,"BAD_INDENT",ke);const y=d.end;const g=u?e(s,u,d,i):t(s,y,o,null,d,i);s.schema.compat&&flowIndentCheck(n.indent,u,i);mapIncludes(s,a.items,g)&&i(y,"DUPLICATE_KEY","Map keys must be unique");const b=resolveProps(h??[],{indicator:"map-value-ind",next:p,offset:g.range[2],onError:i,parentIndent:n.indent,startOnNewline:!u||u.type==="block-scalar"});c=b.end;if(b.found){if(m){p?.type!=="block-map"||b.hasNewline||i(c,"BLOCK_AS_IMPLICIT_KEY","Nested mappings are not allowed in compact mappings");s.options.strict&&d.start<b.found.offset-1024&&i(g.range,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit block mapping key")}const o=p?e(s,p,b,i):t(s,c,h,null,b,i);s.schema.compat&&flowIndentCheck(n.indent,p,i);c=o.range[2];const l=new f(g,o);s.options.keepSourceTokens&&(l.srcToken=r);a.items.push(l)}else{m&&i(g.range,"MISSING_CHAR","Implicit map keys need to be followed by map values");b.comment&&(g.comment?g.comment+="\n"+b.comment:g.comment=b.comment);const e=new f(g);s.options.keepSourceTokens&&(e.srcToken=r);a.items.push(e)}}l&&l<c&&i(l,"IMPOSSIBLE","Map comment with trailing content");a.range=[n.offset,c,l??c];return a}function resolveBlockSeq({composeNode:e,composeEmptyNode:t},s,n,i,r){const o=r?.nodeClass??h;const a=new o(s.schema);s.atRoot&&(s.atRoot=false);let c=n.offset;let l=null;for(const{start:r,value:o}of n.items){const u=resolveProps(r,{indicator:"seq-item-ind",next:o,offset:c,onError:i,parentIndent:n.indent,startOnNewline:true});if(!u.found){if(!(u.anchor||u.tag||o)){l=u.end;u.comment&&(a.comment=u.comment);continue}o&&o.type==="block-seq"?i(u.end,"BAD_INDENT","All sequence items must start at the same column"):i(c,"MISSING_CHAR","Sequence item without - indicator")}const f=o?e(s,o,u,i):t(s,u.end,r,null,u,i);s.schema.compat&&flowIndentCheck(n.indent,o,i);c=f.range[2];a.items.push(f)}a.range=[n.offset,c,l??c];return a}function resolveEnd(e,t,s,n){let i="";if(e){let r=false;let o="";for(const a of e){const{source:e,type:c}=a;switch(c){case"space":r=true;break;case"comment":{s&&!r&&n(a,"MISSING_CHAR","Comments must be separated from other tokens by white space characters");const t=e.substring(1)||" ";i?i+=o+t:i=t;o="";break}case"newline":i&&(o+=e);r=true;break;default:n(a,"UNEXPECTED_TOKEN",`Unexpected ${c} at node end`)}t+=e.length}}return{comment:i,offset:t}}const we="Block collections are not allowed within flow collections";const isBlock=e=>e&&(e.type==="block-map"||e.type==="block-seq");function resolveFlowCollection({composeNode:e,composeEmptyNode:t},s,n,i,r){const o=n.start.source==="{";const a=o?"flow map":"flow sequence";const c=r?.nodeClass??(o?d:h);const u=new c(s.schema);u.flow=true;const p=s.atRoot;p&&(s.atRoot=false);let m=n.offset+n.start.source.length;for(let r=0;r<n.items.length;++r){const c=n.items[r];const{start:h,key:p,sep:y,value:g}=c;const b=resolveProps(h,{flow:a,indicator:"explicit-key-ind",next:p??y?.[0],offset:m,onError:i,parentIndent:n.indent,startOnNewline:false});if(!b.found){if(!b.anchor&&!b.tag&&!y&&!g){r===0&&b.comma?i(b.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${a}`):r<n.items.length-1&&i(b.start,"UNEXPECTED_TOKEN",`Unexpected empty item in ${a}`);b.comment&&(u.comment?u.comment+="\n"+b.comment:u.comment=b.comment);m=b.end;continue}!o&&s.options.strict&&containsNewline(p)&&i(p,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line")}if(r===0)b.comma&&i(b.comma,"UNEXPECTED_TOKEN",`Unexpected , in ${a}`);else{b.comma||i(b.start,"MISSING_CHAR",`Missing , between ${a} items`);if(b.comment){let e="";e:for(const t of h)switch(t.type){case"comma":case"space":break;case"comment":e=t.source.substring(1);break e;default:break e}if(e){let t=u.items[u.items.length-1];l(t)&&(t=t.value??t.key);t.comment?t.comment+="\n"+e:t.comment=e;b.comment=b.comment.substring(e.length+1)}}}if(o||y||b.found){const r=b.end;const l=p?e(s,p,b,i):t(s,r,h,null,b,i);isBlock(p)&&i(l.range,"BLOCK_IN_FLOW",we);const k=resolveProps(y??[],{flow:a,indicator:"map-value-ind",next:g,offset:l.range[2],onError:i,parentIndent:n.indent,startOnNewline:false});if(k.found){if(!o&&!b.found&&s.options.strict){if(y)for(const e of y){if(e===k.found)break;if(e.type==="newline"){i(e,"MULTILINE_IMPLICIT_KEY","Implicit keys of flow sequence pairs need to be on a single line");break}}b.start<k.found.offset-1024&&i(k.found,"KEY_OVER_1024_CHARS","The : indicator must be at most 1024 chars after the start of an implicit flow sequence key")}}else g&&("source"in g&&g.source&&g.source[0]===":"?i(g,"MISSING_CHAR",`Missing space after : in ${a}`):i(k.start,"MISSING_CHAR",`Missing , or : between ${a} items`));const w=g?e(s,g,k,i):k.found?t(s,k.end,y,null,k,i):null;w?isBlock(g)&&i(w.range,"BLOCK_IN_FLOW",we):k.comment&&(l.comment?l.comment+="\n"+k.comment:l.comment=k.comment);const v=new f(l,w);s.options.keepSourceTokens&&(v.srcToken=c);if(o){const e=u;mapIncludes(s,e.items,l)&&i(r,"DUPLICATE_KEY","Map keys must be unique");e.items.push(v)}else{const e=new d(s.schema);e.flow=true;e.items.push(v);u.items.push(e)}m=w?w.range[2]:k.end}else{const n=g?e(s,g,b,i):t(s,b.end,y,null,b,i);u.items.push(n);m=n.range[2];isBlock(g)&&i(n.range,"BLOCK_IN_FLOW",we)}}const y=o?"}":"]";const[g,...b]=n.end;let k=m;if(g&&g.source===y)k=g.offset+g.source.length;else{const e=a[0].toUpperCase()+a.substring(1);const t=p?`${e} must end with a ${y}`:`${e} in block collection must be sufficiently indented and end with a ${y}`;i(m,p?"MISSING_CHAR":"BAD_INDENT",t);g&&g.source.length!==1&&b.unshift(g)}if(b.length>0){const e=resolveEnd(b,k,s.options.strict,i);e.comment&&(u.comment?u.comment+="\n"+e.comment:u.comment=e.comment);u.range=[n.offset,k,e.offset]}else u.range=[n.offset,k,k];return u}function resolveCollection(e,t,s,n,i,r){const o=s.type==="block-map"?resolveBlockMap(e,t,s,n,r):s.type==="block-seq"?resolveBlockSeq(e,t,s,n,r):resolveFlowCollection(e,t,s,n,r);const a=o.constructor;if(i==="!"||i===a.tagName){o.tag=a.tagName;return o}i&&(o.tag=i);return o}function composeCollection(t,n,i,r,o){const a=r?n.directives.tagName(r.source,(e=>o(r,"TAG_RESOLVE_FAILED",e))):null;const c=i.type==="block-map"?"map":i.type==="block-seq"?"seq":i.start.source==="{"?"map":"seq";if(!r||!a||a==="!"||a===d.tagName&&c==="map"||a===h.tagName&&c==="seq"||!c)return resolveCollection(t,n,i,o,a);let l=n.schema.tags.find((e=>e.tag===a&&e.collection===c));if(!l){const e=n.schema.knownTags[a];if(!e||e.collection!==c){e?.collection?o(r,"BAD_COLLECTION_TYPE",`${e.tag} used for ${c} collection, but expects ${e.collection}`,true):o(r,"TAG_RESOLVE_FAILED",`Unresolved tag: ${a}`,true);return resolveCollection(t,n,i,o,a)}n.schema.tags.push(Object.assign({},e,{default:false}));l=e}const u=resolveCollection(t,n,i,o,a,l);const f=l.resolve?.(u,(e=>o(r,"TAG_RESOLVE_FAILED",e)),n.options)??u;const p=e(f)?f:new s(f);p.range=u.range;p.tag=a;l?.format&&(p.format=l.format);return p}function resolveBlockScalar(e,t,n){const i=t.offset;const r=parseBlockScalarHeader(t,e.options.strict,n);if(!r)return{value:"",type:null,comment:"",range:[i,i,i]};const o=r.mode===">"?s.BLOCK_FOLDED:s.BLOCK_LITERAL;const a=t.source?splitLines(t.source):[];let c=a.length;for(let e=a.length-1;e>=0;--e){const t=a[e][1];if(t!==""&&t!=="\r")break;c=e}if(c===0){const e=r.chomp==="+"&&a.length>0?"\n".repeat(Math.max(1,a.length-1)):"";let s=i+r.length;t.source&&(s+=t.source.length);return{value:e,type:o,comment:r.comment,range:[i,s,s]}}let l=t.indent+r.indent;let u=t.offset+r.length;let f=0;for(let t=0;t<c;++t){const[s,i]=a[t];if(i!==""&&i!=="\r"){if(s.length<l){const e="Block scalars with more-indented leading empty lines must use an explicit indentation indicator";n(u+s.length,"MISSING_CHAR",e)}r.indent===0&&(l=s.length);f=t;if(l===0&&!e.atRoot){const e="Block scalar values in collections must be indented";n(u,"BAD_INDENT",e)}break}r.indent===0&&s.length>l&&(l=s.length);u+=s.length+i.length+1}for(let e=a.length-1;e>=c;--e)a[e][0].length>l&&(c=e+1);let h="";let p="";let d=false;for(let e=0;e<f;++e)h+=a[e][0].slice(l)+"\n";for(let e=f;e<c;++e){let[t,i]=a[e];u+=t.length+i.length+1;const c=i[i.length-1]==="\r";c&&(i=i.slice(0,-1));if(i&&t.length<l){const e=r.indent?"explicit indentation indicator":"first line";const s=`Block scalar lines must not be less indented than their ${e}`;n(u-i.length-(c?2:1),"BAD_INDENT",s);t=""}if(o===s.BLOCK_LITERAL){h+=p+t.slice(l)+i;p="\n"}else if(t.length>l||i[0]==="\t"){p===" "?p="\n":d||p!=="\n"||(p="\n\n");h+=p+t.slice(l)+i;p="\n";d=true}else if(i==="")p==="\n"?h+="\n":p="\n";else{h+=p+i;p=" ";d=false}}switch(r.chomp){case"-":break;case"+":for(let e=c;e<a.length;++e)h+="\n"+a[e][0].slice(l);h[h.length-1]!=="\n"&&(h+="\n");break;default:h+="\n"}const m=i+r.length+t.source.length;return{value:h,type:o,comment:r.comment,range:[i,m,m]}}function parseBlockScalarHeader({offset:e,props:t},s,n){if(t[0].type!=="block-scalar-header"){n(t[0],"IMPOSSIBLE","Block scalar header not found");return null}const{source:i}=t[0];const r=i[0];let o=0;let a="";let c=-1;for(let t=1;t<i.length;++t){const s=i[t];if(a||s!=="-"&&s!=="+"){const n=Number(s);!o&&n?o=n:c===-1&&(c=e+t)}else a=s}c!==-1&&n(c,"UNEXPECTED_TOKEN",`Block scalar header includes extra characters: ${i}`);let l=false;let u="";let f=i.length;for(let e=1;e<t.length;++e){const i=t[e];switch(i.type){case"space":l=true;case"newline":f+=i.source.length;break;case"comment":if(s&&!l){const e="Comments must be separated from other tokens by white space characters";n(i,"MISSING_CHAR",e)}f+=i.source.length;u=i.source.substring(1);break;case"error":n(i,"UNEXPECTED_TOKEN",i.message);f+=i.source.length;break;default:{const e=`Unexpected token in block scalar header: ${i.type}`;n(i,"UNEXPECTED_TOKEN",e);const t=i.source;t&&typeof t==="string"&&(f+=t.length)}}}return{mode:r,indent:o,chomp:a,comment:u,length:f}}
/** @returns Array of lines split up as `[indent, content]` */function splitLines(e){const t=e.split(/\n( *)/);const s=t[0];const n=s.match(/^( *)/);const i=n?.[1]?[n[1],s.slice(n[1].length)]:["",s];const r=[i];for(let e=1;e<t.length;e+=2)r.push([t[e],t[e+1]]);return r}function resolveFlowScalar(e,t,n){const{offset:i,type:r,source:o,end:a}=e;let c;let l;const _onError=(e,t,s)=>n(i+e,t,s);switch(r){case"scalar":c=s.PLAIN;l=plainValue(o,_onError);break;case"single-quoted-scalar":c=s.QUOTE_SINGLE;l=singleQuotedValue(o,_onError);break;case"double-quoted-scalar":c=s.QUOTE_DOUBLE;l=doubleQuotedValue(o,_onError);break;default:n(e,"UNEXPECTED_TOKEN",`Expected a flow scalar value, but found: ${r}`);return{value:"",type:null,comment:"",range:[i,i+o.length,i+o.length]}}const u=i+o.length;const f=resolveEnd(a,u,t,n);return{value:l,type:c,comment:f.comment,range:[i,u,f.offset]}}function plainValue(e,t){let s="";switch(e[0]){case"\t":s="a tab character";break;case",":s="flow indicator character ,";break;case"%":s="directive indicator character %";break;case"|":case">":s=`block scalar indicator ${e[0]}`;break;case"@":case"`":s=`reserved character ${e[0]}`;break}s&&t(0,"BAD_SCALAR_START",`Plain value cannot start with ${s}`);return foldLines(e)}function singleQuotedValue(e,t){e[e.length-1]==="'"&&e.length!==1||t(e.length,"MISSING_CHAR","Missing closing 'quote");return foldLines(e.slice(1,-1)).replace(/''/g,"'")}function foldLines(e){let t,s;try{t=new RegExp("(.*?)(?<![ \t])[ \t]*\r?\n","sy");s=new RegExp("[ \t]*(.*?)(?:(?<![ \t])[ \t]*)?\r?\n","sy")}catch(e){t=/(.*?)[ \t]*\r?\n/sy;s=/[ \t]*(.*?)[ \t]*\r?\n/sy}let n=t.exec(e);if(!n)return e;let i=n[1];let r=" ";let o=t.lastIndex;s.lastIndex=o;while(n=s.exec(e)){if(n[1]==="")r==="\n"?i+=r:r="\n";else{i+=r+n[1];r=" "}o=s.lastIndex}const a=/[ \t]*(.*)/sy;a.lastIndex=o;n=a.exec(e);return i+r+(n?.[1]??"")}function doubleQuotedValue(e,t){let s="";for(let n=1;n<e.length-1;++n){const i=e[n];if(i!=="\r"||e[n+1]!=="\n")if(i==="\n"){const{fold:t,offset:i}=foldNewline(e,n);s+=t;n=i}else if(i==="\\"){let i=e[++n];const r=ve[i];if(r)s+=r;else if(i==="\n"){i=e[n+1];while(i===" "||i==="\t")i=e[1+ ++n]}else if(i==="\r"&&e[n+1]==="\n"){i=e[1+ ++n];while(i===" "||i==="\t")i=e[1+ ++n]}else if(i==="x"||i==="u"||i==="U"){const r={x:2,u:4,U:8}[i];s+=parseCharCode(e,n+1,r,t);n+=r}else{const i=e.substr(n-1,2);t(n-1,"BAD_DQ_ESCAPE",`Invalid escape sequence ${i}`);s+=i}}else if(i===" "||i==="\t"){const t=n;let r=e[n+1];while(r===" "||r==="\t")r=e[1+ ++n];r==="\n"||r==="\r"&&e[n+2]==="\n"||(s+=n>t?e.slice(t,n+1):i)}else s+=i}e[e.length-1]==='"'&&e.length!==1||t(e.length,"MISSING_CHAR",'Missing closing "quote');return s}function foldNewline(e,t){let s="";let n=e[t+1];while(n===" "||n==="\t"||n==="\n"||n==="\r"){if(n==="\r"&&e[t+2]!=="\n")break;n==="\n"&&(s+="\n");t+=1;n=e[t+1]}s||(s=" ");return{fold:s,offset:t}}const ve={0:"\0",a:"",b:"\b",e:"",f:"\f",n:"\n",r:"\r",t:"\t",v:"\v",N:"",_:" ",L:"\u2028",P:"\u2029"," ":" ",'"':'"',"/":"/","\\":"\\","\t":"\t"};function parseCharCode(e,t,s,n){const i=e.substr(t,s);const r=i.length===s&&/^[0-9a-fA-F]+$/.test(i);const o=r?parseInt(i,16):NaN;if(isNaN(o)){const i=e.substr(t-2,s+2);n(t-2,"BAD_DQ_ESCAPE",`Invalid escape sequence ${i}`);return i}return String.fromCodePoint(o)}function composeScalar(e,t,n,i){const{value:r,type:o,comment:a,range:c}=t.type==="block-scalar"?resolveBlockScalar(e,t,i):resolveFlowScalar(t,e.options.strict,i);const l=n?e.directives.tagName(n.source,(e=>i(n,"TAG_RESOLVE_FAILED",e))):null;const u=n&&l?findScalarTagByName(e.schema,r,l,n,i):t.type==="scalar"?findScalarTagByTest(e,r,t,i):e.schema[k];let f;try{const o=u.resolve(r,(e=>i(n??t,"TAG_RESOLVE_FAILED",e)),e.options);f=y(o)?o:new s(o)}catch(e){const o=e instanceof Error?e.message:String(e);i(n??t,"TAG_RESOLVE_FAILED",o);f=new s(r)}f.range=c;f.source=r;o&&(f.type=o);l&&(f.tag=l);u.format&&(f.format=u.format);a&&(f.comment=a);return f}function findScalarTagByName(e,t,s,n,i){if(s==="!")return e[k];const r=[];for(const t of e.tags)if(!t.collection&&t.tag===s){if(!t.default||!t.test)return t;r.push(t)}for(const e of r)if(e.test?.test(t))return e;const o=e.knownTags[s];if(o&&!o.collection){e.tags.push(Object.assign({},o,{default:false,test:void 0}));return o}i(n,"TAG_RESOLVE_FAILED",`Unresolved tag: ${s}`,s!=="tag:yaml.org,2002:str");return e[k]}function findScalarTagByTest({directives:e,schema:t},s,n,i){const r=t.tags.find((e=>e.default&&e.test?.test(s)))||t[k];if(t.compat){const o=t.compat.find((e=>e.default&&e.test?.test(s)))??t[k];if(r.tag!==o.tag){const t=e.tagString(r.tag);const s=e.tagString(o.tag);const a=`Value may be parsed as either ${t} or ${s}`;i(n,"TAG_RESOLVE_FAILED",a,true)}}return r}function emptyScalarPosition(e,t,s){if(t){s===null&&(s=t.length);for(let n=s-1;n>=0;--n){let s=t[n];switch(s.type){case"space":case"comment":case"newline":e-=s.source.length;continue}s=t[++n];while(s?.type==="space"){e+=s.source.length;s=t[++n]}break}}return e}const Se={composeNode:composeNode,composeEmptyNode:composeEmptyNode};function composeNode(e,t,s,n){const{spaceBefore:i,comment:r,anchor:o,tag:a}=s;let c;let l=true;switch(t.type){case"alias":c=composeAlias(e,t,n);(o||a)&&n(t,"ALIAS_PROPS","An alias node must not specify any properties");break;case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"block-scalar":c=composeScalar(e,t,a,n);o&&(c.anchor=o.source.substring(1));break;case"block-map":case"block-seq":case"flow-collection":c=composeCollection(Se,e,t,a,n);o&&(c.anchor=o.source.substring(1));break;default:{const i=t.type==="error"?t.message:`Unsupported token (type: ${t.type})`;n(t,"UNEXPECTED_TOKEN",i);c=composeEmptyNode(e,t.offset,void 0,null,s,n);l=false}}o&&c.anchor===""&&n(o,"BAD_ALIAS","Anchor cannot be an empty string");i&&(c.spaceBefore=true);r&&(t.type==="scalar"&&t.source===""?c.comment=r:c.commentBefore=r);e.options.keepSourceTokens&&l&&(c.srcToken=t);return c}function composeEmptyNode(e,t,s,n,{spaceBefore:i,comment:r,anchor:o,tag:a,end:c},l){const u={type:"scalar",offset:emptyScalarPosition(t,s,n),indent:-1,source:""};const f=composeScalar(e,u,a,l);if(o){f.anchor=o.source.substring(1);f.anchor===""&&l(o,"BAD_ALIAS","Anchor cannot be an empty string")}i&&(f.spaceBefore=true);if(r){f.comment=r;f.range[2]=c}return f}function composeAlias({options:e},{offset:t,source:s,end:n},i){const r=new O(s.substring(1));r.source===""&&i(t,"BAD_ALIAS","Alias cannot be an empty string");r.source.endsWith(":")&&i(t+s.length-1,"BAD_ALIAS","Alias ending in : is ambiguous",true);const o=t+s.length;const a=resolveEnd(n,o,e.strict,i);r.range=[t,o,a.offset];a.comment&&(r.comment=a.comment);return r}function composeDoc(e,t,{offset:s,start:n,value:i,end:r},o){const a=Object.assign({_directives:t},e);const c=new Document(void 0,a);const l={atRoot:true,directives:c.directives,options:c.options,schema:c.schema};const u=resolveProps(n,{indicator:"doc-start",next:i??r?.[0],offset:s,onError:o,parentIndent:0,startOnNewline:true});if(u.found){c.directives.docStart=true;!i||i.type!=="block-map"&&i.type!=="block-seq"||u.hasNewline||o(u.end,"MISSING_CHAR","Block collection cannot start on same line with directives-end marker")}c.contents=i?composeNode(l,i,u,o):composeEmptyNode(l,u.end,n,null,u,o);const f=c.contents.range[2];const h=resolveEnd(r,f,false,o);h.comment&&(c.comment=h.comment);c.range=[s,f,h.offset];return c}function getErrorPos(e){if(typeof e==="number")return[e,e+1];if(Array.isArray(e))return e.length===2?e:[e[0],e[1]];const{offset:t,source:s}=e;return[t,t+(typeof s==="string"?s.length:1)]}function parsePrelude(e){let t="";let s=false;let n=false;for(let i=0;i<e.length;++i){const r=e[i];switch(r[0]){case"#":t+=(t===""?"":n?"\n\n":"\n")+(r.substring(1)||" ");s=true;n=false;break;case"%":e[i+1]?.[0]!=="#"&&(i+=1);s=false;break;default:s||(n=true);s=false}}return{comment:t,afterEmptyLine:n}}class Composer{constructor(e={}){this.doc=null;this.atDirectives=false;this.prelude=[];this.errors=[];this.warnings=[];this.onError=(e,t,s,n)=>{const i=getErrorPos(e);n?this.warnings.push(new YAMLWarning(i,t,s)):this.errors.push(new YAMLParseError(i,t,s))};this.directives=new Directives({version:e.version||"1.2"});this.options=e}decorate(e,t){const{comment:s,afterEmptyLine:n}=parsePrelude(this.prelude);if(s){const i=e.contents;if(t)e.comment=e.comment?`${e.comment}\n${s}`:s;else if(n||e.directives.docStart||!i)e.commentBefore=s;else if(_(i)&&!i.flow&&i.items.length>0){let e=i.items[0];l(e)&&(e=e.key);const t=e.commentBefore;e.commentBefore=t?`${s}\n${t}`:s}else{const e=i.commentBefore;i.commentBefore=e?`${s}\n${e}`:s}}if(t){Array.prototype.push.apply(e.errors,this.errors);Array.prototype.push.apply(e.warnings,this.warnings)}else{e.errors=this.errors;e.warnings=this.warnings}this.prelude=[];this.errors=[];this.warnings=[]}streamInfo(){return{comment:parsePrelude(this.prelude).comment,directives:this.directives,errors:this.errors,warnings:this.warnings}}
/**
     * Compose tokens into documents.
     *
     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.
     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.
     */*compose(e,t=false,s=-1){for(const t of e)yield*this.next(t);yield*this.end(t,s)}*next(e){switch(e.type){case"directive":this.directives.add(e.source,((t,s,n)=>{const i=getErrorPos(e);i[0]+=t;this.onError(i,"BAD_DIRECTIVE",s,n)}));this.prelude.push(e.source);this.atDirectives=true;break;case"document":{const t=composeDoc(this.options,this.directives,e,this.onError);this.atDirectives&&!t.directives.docStart&&this.onError(e,"MISSING_CHAR","Missing directives-end/doc-start indicator line");this.decorate(t,false);this.doc&&(yield this.doc);this.doc=t;this.atDirectives=false;break}case"byte-order-mark":case"space":break;case"comment":case"newline":this.prelude.push(e.source);break;case"error":{const t=e.source?`${e.message}: ${JSON.stringify(e.source)}`:e.message;const s=new YAMLParseError(getErrorPos(e),"UNEXPECTED_TOKEN",t);this.atDirectives||!this.doc?this.errors.push(s):this.doc.errors.push(s);break}case"doc-end":{if(!this.doc){const t="Unexpected doc-end without preceding document";this.errors.push(new YAMLParseError(getErrorPos(e),"UNEXPECTED_TOKEN",t));break}this.doc.directives.docEnd=true;const t=resolveEnd(e.end,e.offset+e.source.length,this.doc.options.strict,this.onError);this.decorate(this.doc,true);if(t.comment){const e=this.doc.comment;this.doc.comment=e?`${e}\n${t.comment}`:t.comment}this.doc.range[2]=t.offset;break}default:this.errors.push(new YAMLParseError(getErrorPos(e),"UNEXPECTED_TOKEN",`Unsupported token ${e.type}`))}}
/**
     * Call at end of input to yield any remaining document.
     *
     * @param forceDoc - If the stream contains no document, still emit a final document including any comments and directives that would be applied to a subsequent document.
     * @param endOffset - Should be set if `forceDoc` is also set, to set the document range end and to indicate errors correctly.
     */*end(e=false,t=-1){if(this.doc){this.decorate(this.doc,true);yield this.doc;this.doc=null}else if(e){const e=Object.assign({_directives:this.directives},this.options);const s=new Document(void 0,e);this.atDirectives&&this.onError(t,"MISSING_CHAR","Missing directives-end indicator line");s.range=[0,t,t];this.decorate(s,false);yield s}}}function resolveAsScalar(e,t=true,s){if(e){const _onError=(e,t,n)=>{const i=typeof e==="number"?e:Array.isArray(e)?e[0]:e.offset;if(!s)throw new YAMLParseError([i,i+1],t,n);s(i,t,n)};switch(e.type){case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return resolveFlowScalar(e,t,_onError);case"block-scalar":return resolveBlockScalar({options:{strict:t}},e,_onError)}}return null}
/**
 * Create a new scalar token with `value`
 *
 * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,
 * as this function does not support any schema operations and won't check for such conflicts.
 *
 * @param value The string representation of the value, which will have its content properly indented.
 * @param context.end Comments and whitespace after the end of the value, or after the block scalar header. If undefined, a newline will be added.
 * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.
 * @param context.indent The indent level of the token.
 * @param context.inFlow Is this scalar within a flow collection? This may affect the resolved type of the token's value.
 * @param context.offset The offset position of the token.
 * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.
 */function createScalarToken(e,t){const{implicitKey:s=false,indent:n,inFlow:i=false,offset:r=-1,type:o="PLAIN"}=t;const c=a({type:o,value:e},{implicitKey:s,indent:n>0?" ".repeat(n):"",inFlow:i,options:{blockQuote:true,lineWidth:-1}});const l=t.end??[{type:"newline",offset:-1,indent:n,source:"\n"}];switch(c[0]){case"|":case">":{const e=c.indexOf("\n");const t=c.substring(0,e);const s=c.substring(e+1)+"\n";const i=[{type:"block-scalar-header",offset:r,indent:n,source:t}];addEndtoBlockProps(i,l)||i.push({type:"newline",offset:-1,indent:n,source:"\n"});return{type:"block-scalar",offset:r,indent:n,props:i,source:s}}case'"':return{type:"double-quoted-scalar",offset:r,indent:n,source:c,end:l};case"'":return{type:"single-quoted-scalar",offset:r,indent:n,source:c,end:l};default:return{type:"scalar",offset:r,indent:n,source:c,end:l}}}
/**
 * Set the value of `token` to the given string `value`, overwriting any previous contents and type that it may have.
 *
 * Best efforts are made to retain any comments previously associated with the `token`,
 * though all contents within a collection's `items` will be overwritten.
 *
 * Values that represent an actual string but may be parsed as a different type should use a `type` other than `'PLAIN'`,
 * as this function does not support any schema operations and won't check for such conflicts.
 *
 * @param token Any token. If it does not include an `indent` value, the value will be stringified as if it were an implicit key.
 * @param value The string representation of the value, which will have its content properly indented.
 * @param context.afterKey In most cases, values after a key should have an additional level of indentation.
 * @param context.implicitKey Being within an implicit key may affect the resolved type of the token's value.
 * @param context.inFlow Being within a flow collection may affect the resolved type of the token's value.
 * @param context.type The preferred type of the scalar token. If undefined, the previous type of the `token` will be used, defaulting to `'PLAIN'`.
 */function setScalarValue(e,t,s={}){let{afterKey:n=false,implicitKey:i=false,inFlow:r=false,type:o}=s;let c="indent"in e?e.indent:null;n&&typeof c==="number"&&(c+=2);if(!o)switch(e.type){case"single-quoted-scalar":o="QUOTE_SINGLE";break;case"double-quoted-scalar":o="QUOTE_DOUBLE";break;case"block-scalar":{const t=e.props[0];if(t.type!=="block-scalar-header")throw new Error("Invalid block scalar header");o=t.source[0]===">"?"BLOCK_FOLDED":"BLOCK_LITERAL";break}default:o="PLAIN"}const l=a({type:o,value:t},{implicitKey:i||c===null,indent:c!==null&&c>0?" ".repeat(c):"",inFlow:r,options:{blockQuote:true,lineWidth:-1}});switch(l[0]){case"|":case">":setBlockScalarValue(e,l);break;case'"':setFlowScalarValue(e,l,"double-quoted-scalar");break;case"'":setFlowScalarValue(e,l,"single-quoted-scalar");break;default:setFlowScalarValue(e,l,"scalar")}}function setBlockScalarValue(e,t){const s=t.indexOf("\n");const n=t.substring(0,s);const i=t.substring(s+1)+"\n";if(e.type==="block-scalar"){const t=e.props[0];if(t.type!=="block-scalar-header")throw new Error("Invalid block scalar header");t.source=n;e.source=i}else{const{offset:t}=e;const s="indent"in e?e.indent:-1;const r=[{type:"block-scalar-header",offset:t,indent:s,source:n}];addEndtoBlockProps(r,"end"in e?e.end:void 0)||r.push({type:"newline",offset:-1,indent:s,source:"\n"});for(const t of Object.keys(e))t!=="type"&&t!=="offset"&&delete e[t];Object.assign(e,{type:"block-scalar",indent:s,props:r,source:i})}}
/** @returns `true` if last token is a newline */function addEndtoBlockProps(e,t){if(t)for(const s of t)switch(s.type){case"space":case"comment":e.push(s);break;case"newline":e.push(s);return true}return false}function setFlowScalarValue(e,t,s){switch(e.type){case"scalar":case"double-quoted-scalar":case"single-quoted-scalar":e.type=s;e.source=t;break;case"block-scalar":{const n=e.props.slice(1);let i=t.length;e.props[0].type==="block-scalar-header"&&(i-=e.props[0].source.length);for(const e of n)e.offset+=i;delete e.props;Object.assign(e,{type:s,source:t,end:n});break}case"block-map":case"block-seq":{const n=e.offset+t.length;const i={type:"newline",offset:n,indent:e.indent,source:"\n"};delete e.items;Object.assign(e,{type:s,source:t,end:[i]});break}default:{const n="indent"in e?e.indent:-1;const i="end"in e&&Array.isArray(e.end)?e.end.filter((e=>e.type==="space"||e.type==="comment"||e.type==="newline")):[];for(const t of Object.keys(e))t!=="type"&&t!=="offset"&&delete e[t];Object.assign(e,{type:s,indent:n,source:t,end:i})}}}const stringify$1=e=>"type"in e?stringifyToken(e):stringifyItem(e);function stringifyToken(e){switch(e.type){case"block-scalar":{let t="";for(const s of e.props)t+=stringifyToken(s);return t+e.source}case"block-map":case"block-seq":{let t="";for(const s of e.items)t+=stringifyItem(s);return t}case"flow-collection":{let t=e.start.source;for(const s of e.items)t+=stringifyItem(s);for(const s of e.end)t+=s.source;return t}case"document":{let t=stringifyItem(e);if(e.end)for(const s of e.end)t+=s.source;return t}default:{let t=e.source;if("end"in e&&e.end)for(const s of e.end)t+=s.source;return t}}}function stringifyItem({start:e,key:t,sep:s,value:n}){let i="";for(const t of e)i+=t.source;t&&(i+=stringifyToken(t));if(s)for(const e of s)i+=e.source;n&&(i+=stringifyToken(n));return i}const Ee=Symbol("break visit");const Ne=Symbol("skip children");const Ae=Symbol("remove item");function visit(e,t){"type"in e&&e.type==="document"&&(e={start:e.start,value:e.value});_visit(Object.freeze([]),e,t)}visit.BREAK=Ee;visit.SKIP=Ne;visit.REMOVE=Ae;visit.itemAtPath=(e,t)=>{let s=e;for(const[e,n]of t){const t=s?.[e];if(!t||!("items"in t))return;s=t.items[n]}return s};visit.parentCollection=(e,t)=>{const s=visit.itemAtPath(e,t.slice(0,-1));const n=t[t.length-1][0];const i=s?.[n];if(i&&"items"in i)return i;throw new Error("Parent collection not found")};function _visit(e,t,s){let n=s(t,e);if(typeof n==="symbol")return n;for(const i of["key","value"]){const r=t[i];if(r&&"items"in r){for(let t=0;t<r.items.length;++t){const n=_visit(Object.freeze(e.concat([[i,t]])),r.items[t],s);if(typeof n==="number")t=n-1;else{if(n===Ee)return Ee;if(n===Ae){r.items.splice(t,1);t-=1}}}typeof n==="function"&&i==="key"&&(n=n(t,e))}}return typeof n==="function"?n(t,e):n}const Te="\ufeff";const Ie="";const Le="";const Oe="";
/** @returns `true` if `token` is a flow or block collection */const isCollection=e=>!!e&&"items"in e
/** @returns `true` if `token` is a flow or block scalar; not an alias */;const isScalar=e=>!!e&&(e.type==="scalar"||e.type==="single-quoted-scalar"||e.type==="double-quoted-scalar"||e.type==="block-scalar");function prettyToken(e){switch(e){case Te:return"<BOM>";case Ie:return"<DOC>";case Le:return"<FLOW_END>";case Oe:return"<SCALAR>";default:return JSON.stringify(e)}}function tokenType(e){switch(e){case Te:return"byte-order-mark";case Ie:return"doc-mode";case Le:return"flow-error-end";case Oe:return"scalar";case"---":return"doc-start";case"...":return"doc-end";case"":case"\n":case"\r\n":return"newline";case"-":return"seq-item-ind";case"?":return"explicit-key-ind";case":":return"map-value-ind";case"{":return"flow-map-start";case"}":return"flow-map-end";case"[":return"flow-seq-start";case"]":return"flow-seq-end";case",":return"comma"}switch(e[0]){case" ":case"\t":return"space";case"#":return"comment";case"%":return"directive-line";case"*":return"alias";case"&":return"anchor";case"!":return"tag";case"'":return"single-quoted-scalar";case'"':return"double-quoted-scalar";case"|":case">":return"block-scalar-header"}return null}var xe=Object.freeze(Object.defineProperty({__proto__:null,BOM:Te,DOCUMENT:Ie,FLOW_END:Le,SCALAR:Oe,createScalarToken:createScalarToken,isCollection:isCollection,isScalar:isScalar,prettyToken:prettyToken,resolveAsScalar:resolveAsScalar,setScalarValue:setScalarValue,stringify:stringify$1,tokenType:tokenType,visit:visit},Symbol.toStringTag,{value:"Module"}));function isEmpty(e){switch(e){case void 0:case" ":case"\n":case"\r":case"\t":return true;default:return false}}const Ce=new Set("0123456789ABCDEFabcdef");const _e=new Set("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-#;/?:@&=+$_.!~*'()");const Pe=new Set(",[]{}");const De=new Set(" ,[]{}\n\r\t");const isNotAnchorChar=e=>!e||De.has(e);class Lexer{constructor(){this.atEnd=false;this.blockScalarIndent=-1;this.blockScalarKeep=false;this.buffer="";this.flowKey=false;this.flowLevel=0;this.indentNext=0;this.indentValue=0;this.lineEndPos=null;this.next=null;this.pos=0}
/**
     * Generate YAML tokens from the `source` string. If `incomplete`,
     * a part of the last line may be left as a buffer for the next call.
     *
     * @returns A generator of lexical tokens
     */*lex(e,t=false){if(e){if(typeof e!=="string")throw TypeError("source is not a string");this.buffer=this.buffer?this.buffer+e:e;this.lineEndPos=null}this.atEnd=!t;let s=this.next??"stream";while(s&&(t||this.hasChars(1)))s=yield*this.parseNext(s)}atLineEnd(){let e=this.pos;let t=this.buffer[e];while(t===" "||t==="\t")t=this.buffer[++e];return!t||t==="#"||t==="\n"||t==="\r"&&this.buffer[e+1]==="\n"}charAt(e){return this.buffer[this.pos+e]}continueScalar(e){let t=this.buffer[e];if(this.indentNext>0){let s=0;while(t===" ")t=this.buffer[++s+e];if(t==="\r"){const t=this.buffer[s+e+1];if(t==="\n"||!t&&!this.atEnd)return e+s+1}return t==="\n"||s>=this.indentNext||!t&&!this.atEnd?e+s:-1}if(t==="-"||t==="."){const t=this.buffer.substr(e,3);if((t==="---"||t==="...")&&isEmpty(this.buffer[e+3]))return-1}return e}getLine(){let e=this.lineEndPos;if(typeof e!=="number"||e!==-1&&e<this.pos){e=this.buffer.indexOf("\n",this.pos);this.lineEndPos=e}if(e===-1)return this.atEnd?this.buffer.substring(this.pos):null;this.buffer[e-1]==="\r"&&(e-=1);return this.buffer.substring(this.pos,e)}hasChars(e){return this.pos+e<=this.buffer.length}setNext(e){this.buffer=this.buffer.substring(this.pos);this.pos=0;this.lineEndPos=null;this.next=e;return null}peek(e){return this.buffer.substr(this.pos,e)}*parseNext(e){switch(e){case"stream":return yield*this.parseStream();case"line-start":return yield*this.parseLineStart();case"block-start":return yield*this.parseBlockStart();case"doc":return yield*this.parseDocument();case"flow":return yield*this.parseFlowCollection();case"quoted-scalar":return yield*this.parseQuotedScalar();case"block-scalar":return yield*this.parseBlockScalar();case"plain-scalar":return yield*this.parsePlainScalar()}}*parseStream(){let e=this.getLine();if(e===null)return this.setNext("stream");if(e[0]===Te){yield*this.pushCount(1);e=e.substring(1)}if(e[0]==="%"){let t=e.length;let s=e.indexOf("#");while(s!==-1){const n=e[s-1];if(n===" "||n==="\t"){t=s-1;break}s=e.indexOf("#",s+1)}while(true){const s=e[t-1];if(s!==" "&&s!=="\t")break;t-=1}const n=(yield*this.pushCount(t))+(yield*this.pushSpaces(true));yield*this.pushCount(e.length-n);this.pushNewline();return"stream"}if(this.atLineEnd()){const t=yield*this.pushSpaces(true);yield*this.pushCount(e.length-t);yield*this.pushNewline();return"stream"}yield Ie;return yield*this.parseLineStart()}*parseLineStart(){const e=this.charAt(0);if(!e&&!this.atEnd)return this.setNext("line-start");if(e==="-"||e==="."){if(!this.atEnd&&!this.hasChars(4))return this.setNext("line-start");const e=this.peek(3);if(e==="---"&&isEmpty(this.charAt(3))){yield*this.pushCount(3);this.indentValue=0;this.indentNext=0;return"doc"}if(e==="..."&&isEmpty(this.charAt(3))){yield*this.pushCount(3);return"stream"}}this.indentValue=yield*this.pushSpaces(false);this.indentNext>this.indentValue&&!isEmpty(this.charAt(1))&&(this.indentNext=this.indentValue);return yield*this.parseBlockStart()}*parseBlockStart(){const[e,t]=this.peek(2);if(!t&&!this.atEnd)return this.setNext("block-start");if((e==="-"||e==="?"||e===":")&&isEmpty(t)){const e=(yield*this.pushCount(1))+(yield*this.pushSpaces(true));this.indentNext=this.indentValue+1;this.indentValue+=e;return yield*this.parseBlockStart()}return"doc"}*parseDocument(){yield*this.pushSpaces(true);const e=this.getLine();if(e===null)return this.setNext("doc");let t=yield*this.pushIndicators();switch(e[t]){case"#":yield*this.pushCount(e.length-t);case void 0:yield*this.pushNewline();return yield*this.parseLineStart();case"{":case"[":yield*this.pushCount(1);this.flowKey=false;this.flowLevel=1;return"flow";case"}":case"]":yield*this.pushCount(1);return"doc";case"*":yield*this.pushUntil(isNotAnchorChar);return"doc";case'"':case"'":return yield*this.parseQuotedScalar();case"|":case">":t+=(yield*this.parseBlockScalarHeader());t+=(yield*this.pushSpaces(true));yield*this.pushCount(e.length-t);yield*this.pushNewline();return yield*this.parseBlockScalar();default:return yield*this.parsePlainScalar()}}*parseFlowCollection(){let e,t;let s=-1;do{e=yield*this.pushNewline();if(e>0){t=yield*this.pushSpaces(false);this.indentValue=s=t}else t=0;t+=(yield*this.pushSpaces(true))}while(e+t>0);const n=this.getLine();if(n===null)return this.setNext("flow");if(s!==-1&&s<this.indentNext&&n[0]!=="#"||s===0&&(n.startsWith("---")||n.startsWith("..."))&&isEmpty(n[3])){const e=s===this.indentNext-1&&this.flowLevel===1&&(n[0]==="]"||n[0]==="}");if(!e){this.flowLevel=0;yield Le;return yield*this.parseLineStart()}}let i=0;while(n[i]===","){i+=(yield*this.pushCount(1));i+=(yield*this.pushSpaces(true));this.flowKey=false}i+=(yield*this.pushIndicators());switch(n[i]){case void 0:return"flow";case"#":yield*this.pushCount(n.length-i);return"flow";case"{":case"[":yield*this.pushCount(1);this.flowKey=false;this.flowLevel+=1;return"flow";case"}":case"]":yield*this.pushCount(1);this.flowKey=true;this.flowLevel-=1;return this.flowLevel?"flow":"doc";case"*":yield*this.pushUntil(isNotAnchorChar);return"flow";case'"':case"'":this.flowKey=true;return yield*this.parseQuotedScalar();case":":{const e=this.charAt(1);if(this.flowKey||isEmpty(e)||e===","){this.flowKey=false;yield*this.pushCount(1);yield*this.pushSpaces(true);return"flow"}}default:this.flowKey=false;return yield*this.parsePlainScalar()}}*parseQuotedScalar(){const e=this.charAt(0);let t=this.buffer.indexOf(e,this.pos+1);if(e==="'")while(t!==-1&&this.buffer[t+1]==="'")t=this.buffer.indexOf("'",t+2);else while(t!==-1){let e=0;while(this.buffer[t-1-e]==="\\")e+=1;if(e%2===0)break;t=this.buffer.indexOf('"',t+1)}const s=this.buffer.substring(0,t);let n=s.indexOf("\n",this.pos);if(n!==-1){while(n!==-1){const e=this.continueScalar(n+1);if(e===-1)break;n=s.indexOf("\n",e)}n!==-1&&(t=n-(s[n-1]==="\r"?2:1))}if(t===-1){if(!this.atEnd)return this.setNext("quoted-scalar");t=this.buffer.length}yield*this.pushToIndex(t+1,false);return this.flowLevel?"flow":"doc"}*parseBlockScalarHeader(){this.blockScalarIndent=-1;this.blockScalarKeep=false;let e=this.pos;while(true){const t=this.buffer[++e];if(t==="+")this.blockScalarKeep=true;else if(t>"0"&&t<="9")this.blockScalarIndent=Number(t)-1;else if(t!=="-")break}return yield*this.pushUntil((e=>isEmpty(e)||e==="#"))}*parseBlockScalar(){let e=this.pos-1;let t=0;let s;e:for(let n=this.pos;s=this.buffer[n];++n)switch(s){case" ":t+=1;break;case"\n":e=n;t=0;break;case"\r":{const e=this.buffer[n+1];if(!e&&!this.atEnd)return this.setNext("block-scalar");if(e==="\n")break}default:break e}if(!s&&!this.atEnd)return this.setNext("block-scalar");if(t>=this.indentNext){this.blockScalarIndent===-1?this.indentNext=t:this.indentNext=this.blockScalarIndent+(this.indentNext===0?1:this.indentNext);do{const t=this.continueScalar(e+1);if(t===-1)break;e=this.buffer.indexOf("\n",t)}while(e!==-1);if(e===-1){if(!this.atEnd)return this.setNext("block-scalar");e=this.buffer.length}}let n=e+1;s=this.buffer[n];while(s===" ")s=this.buffer[++n];if(s==="\t"){while(s==="\t"||s===" "||s==="\r"||s==="\n")s=this.buffer[++n];e=n-1}else if(!this.blockScalarKeep)do{let s=e-1;let n=this.buffer[s];n==="\r"&&(n=this.buffer[--s]);const i=s;while(n===" ")n=this.buffer[--s];if(!(n==="\n"&&s>=this.pos&&s+1+t>i))break;e=s}while(true);yield Oe;yield*this.pushToIndex(e+1,true);return yield*this.parseLineStart()}*parsePlainScalar(){const e=this.flowLevel>0;let t=this.pos-1;let s=this.pos-1;let n;while(n=this.buffer[++s])if(n===":"){const n=this.buffer[s+1];if(isEmpty(n)||e&&Pe.has(n))break;t=s}else if(isEmpty(n)){let i=this.buffer[s+1];if(n==="\r")if(i==="\n"){s+=1;n="\n";i=this.buffer[s+1]}else t=s;if(i==="#"||e&&Pe.has(i))break;if(n==="\n"){const e=this.continueScalar(s+1);if(e===-1)break;s=Math.max(s,e-2)}}else{if(e&&Pe.has(n))break;t=s}if(!n&&!this.atEnd)return this.setNext("plain-scalar");yield Oe;yield*this.pushToIndex(t+1,true);return e?"flow":"doc"}*pushCount(e){if(e>0){yield this.buffer.substr(this.pos,e);this.pos+=e;return e}return 0}*pushToIndex(e,t){const s=this.buffer.slice(this.pos,e);if(s){yield s;this.pos+=s.length;return s.length}t&&(yield"");return 0}*pushIndicators(){switch(this.charAt(0)){case"!":return(yield*this.pushTag())+(yield*this.pushSpaces(true))+(yield*this.pushIndicators());case"&":return(yield*this.pushUntil(isNotAnchorChar))+(yield*this.pushSpaces(true))+(yield*this.pushIndicators());case"-":case"?":case":":{const e=this.flowLevel>0;const t=this.charAt(1);if(isEmpty(t)||e&&Pe.has(t)){e?this.flowKey&&(this.flowKey=false):this.indentNext=this.indentValue+1;return(yield*this.pushCount(1))+(yield*this.pushSpaces(true))+(yield*this.pushIndicators())}}}return 0}*pushTag(){if(this.charAt(1)==="<"){let e=this.pos+2;let t=this.buffer[e];while(!isEmpty(t)&&t!==">")t=this.buffer[++e];return yield*this.pushToIndex(t===">"?e+1:e,false)}{let e=this.pos+1;let t=this.buffer[e];while(t)if(_e.has(t))t=this.buffer[++e];else{if(t!=="%"||!Ce.has(this.buffer[e+1])||!Ce.has(this.buffer[e+2]))break;t=this.buffer[e+=3]}return yield*this.pushToIndex(e,false)}}*pushNewline(){const e=this.buffer[this.pos];return e==="\n"?yield*this.pushCount(1):e==="\r"&&this.charAt(1)==="\n"?yield*this.pushCount(2):0}*pushSpaces(e){let t=this.pos-1;let s;do{s=this.buffer[++t]}while(s===" "||e&&s==="\t");const n=t-this.pos;if(n>0){yield this.buffer.substr(this.pos,n);this.pos=t}return n}*pushUntil(e){let t=this.pos;let s=this.buffer[t];while(!e(s))s=this.buffer[++t];return yield*this.pushToIndex(t,false)}}class LineCounter{constructor(){this.lineStarts=[];this.addNewLine=e=>this.lineStarts.push(e);this.linePos=e=>{let t=0;let s=this.lineStarts.length;while(t<s){const n=t+s>>1;this.lineStarts[n]<e?t=n+1:s=n}if(this.lineStarts[t]===e)return{line:t+1,col:1};if(t===0)return{line:0,col:e};const n=this.lineStarts[t-1];return{line:t,col:e-n+1}}}}function includesToken(e,t){for(let s=0;s<e.length;++s)if(e[s].type===t)return true;return false}function findNonEmptyIndex(e){for(let t=0;t<e.length;++t)switch(e[t].type){case"space":case"comment":case"newline":break;default:return t}return-1}function isFlowToken(e){switch(e?.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":case"flow-collection":return true;default:return false}}function getPrevProps(e){switch(e.type){case"document":return e.start;case"block-map":{const t=e.items[e.items.length-1];return t.sep??t.start}case"block-seq":return e.items[e.items.length-1].start;default:return[]}}function getFirstKeyStartProps(e){if(e.length===0)return[];let t=e.length;e:while(--t>=0)switch(e[t].type){case"doc-start":case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":case"newline":break e}while(e[++t]?.type==="space");return e.splice(t,e.length)}function fixFlowSeqItems(e){if(e.start.type==="flow-seq-start")for(const t of e.items)if(t.sep&&!t.value&&!includesToken(t.start,"explicit-key-ind")&&!includesToken(t.sep,"map-value-ind")){t.key&&(t.value=t.key);delete t.key;isFlowToken(t.value)?t.value.end?Array.prototype.push.apply(t.value.end,t.sep):t.value.end=t.sep:Array.prototype.push.apply(t.start,t.sep);delete t.sep}}class Parser{
/**
     * @param onNewLine - If defined, called separately with the start position of
     *   each new line (in `parse()`, including the start of input).
     */
constructor(e){this.atNewLine=true;this.atScalar=false;this.indent=0;this.offset=0;this.onKeyLine=false;this.stack=[];this.source="";this.type="";this.lexer=new Lexer;this.onNewLine=e}
/**
     * Parse `source` as a YAML stream.
     * If `incomplete`, a part of the last line may be left as a buffer for the next call.
     *
     * Errors are not thrown, but yielded as `{ type: 'error', message }` tokens.
     *
     * @returns A generator of tokens representing each directive, document, and other structure.
     */*parse(e,t=false){this.onNewLine&&this.offset===0&&this.onNewLine(0);for(const s of this.lexer.lex(e,t))yield*this.next(s);t||(yield*this.end())}*next(e){this.source=e;if(this.atScalar){this.atScalar=false;yield*this.step();this.offset+=e.length;return}const t=tokenType(e);if(t)if(t==="scalar"){this.atNewLine=false;this.atScalar=true;this.type="scalar"}else{this.type=t;yield*this.step();switch(t){case"newline":this.atNewLine=true;this.indent=0;this.onNewLine&&this.onNewLine(this.offset+e.length);break;case"space":this.atNewLine&&e[0]===" "&&(this.indent+=e.length);break;case"explicit-key-ind":case"map-value-ind":case"seq-item-ind":this.atNewLine&&(this.indent+=e.length);break;case"doc-mode":case"flow-error-end":return;default:this.atNewLine=false}this.offset+=e.length}else{const t=`Not a YAML token: ${e}`;yield*this.pop({type:"error",offset:this.offset,message:t,source:e});this.offset+=e.length}}*end(){while(this.stack.length>0)yield*this.pop()}get sourceToken(){const e={type:this.type,offset:this.offset,indent:this.indent,source:this.source};return e}*step(){const e=this.peek(1);if(this.type!=="doc-end"||e&&e.type==="doc-end"){if(!e)return yield*this.stream();switch(e.type){case"document":return yield*this.document(e);case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return yield*this.scalar(e);case"block-scalar":return yield*this.blockScalar(e);case"block-map":return yield*this.blockMap(e);case"block-seq":return yield*this.blockSequence(e);case"flow-collection":return yield*this.flowCollection(e);case"doc-end":return yield*this.documentEnd(e)}yield*this.pop()}else{while(this.stack.length>0)yield*this.pop();this.stack.push({type:"doc-end",offset:this.offset,source:this.source})}}peek(e){return this.stack[this.stack.length-e]}*pop(e){const t=e??this.stack.pop();if(t)if(this.stack.length===0)yield t;else{const e=this.peek(1);t.type==="block-scalar"?t.indent="indent"in e?e.indent:0:t.type==="flow-collection"&&e.type==="document"&&(t.indent=0);t.type==="flow-collection"&&fixFlowSeqItems(t);switch(e.type){case"document":e.value=t;break;case"block-scalar":e.props.push(t);break;case"block-map":{const s=e.items[e.items.length-1];if(s.value){e.items.push({start:[],key:t,sep:[]});this.onKeyLine=true;return}if(!s.sep){Object.assign(s,{key:t,sep:[]});this.onKeyLine=!s.explicitKey;return}s.value=t;break}case"block-seq":{const s=e.items[e.items.length-1];s.value?e.items.push({start:[],value:t}):s.value=t;break}case"flow-collection":{const s=e.items[e.items.length-1];!s||s.value?e.items.push({start:[],key:t,sep:[]}):s.sep?s.value=t:Object.assign(s,{key:t,sep:[]});return}default:yield*this.pop();yield*this.pop(t)}if((e.type==="document"||e.type==="block-map"||e.type==="block-seq")&&(t.type==="block-map"||t.type==="block-seq")){const s=t.items[t.items.length-1];if(s&&!s.sep&&!s.value&&s.start.length>0&&findNonEmptyIndex(s.start)===-1&&(t.indent===0||s.start.every((e=>e.type!=="comment"||e.indent<t.indent)))){e.type==="document"?e.end=s.start:e.items.push({start:s.start});t.items.splice(-1,1)}}}else{const e="Tried to pop an empty stack";yield{type:"error",offset:this.offset,source:"",message:e}}}*stream(){switch(this.type){case"directive-line":yield{type:"directive",offset:this.offset,source:this.source};return;case"byte-order-mark":case"space":case"comment":case"newline":yield this.sourceToken;return;case"doc-mode":case"doc-start":{const e={type:"document",offset:this.offset,start:[]};this.type==="doc-start"&&e.start.push(this.sourceToken);this.stack.push(e);return}}yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML stream`,source:this.source}}*document(e){if(e.value)return yield*this.lineEnd(e);switch(this.type){case"doc-start":if(findNonEmptyIndex(e.start)!==-1){yield*this.pop();yield*this.step()}else e.start.push(this.sourceToken);return;case"anchor":case"tag":case"space":case"comment":case"newline":e.start.push(this.sourceToken);return}const t=this.startBlockValue(e);t?this.stack.push(t):yield{type:"error",offset:this.offset,message:`Unexpected ${this.type} token in YAML document`,source:this.source}}*scalar(e){if(this.type==="map-value-ind"){const t=getPrevProps(this.peek(2));const s=getFirstKeyStartProps(t);let n;if(e.end){n=e.end;n.push(this.sourceToken);delete e.end}else n=[this.sourceToken];const i={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:s,key:e,sep:n}]};this.onKeyLine=true;this.stack[this.stack.length-1]=i}else yield*this.lineEnd(e)}*blockScalar(e){switch(this.type){case"space":case"comment":case"newline":e.props.push(this.sourceToken);return;case"scalar":e.source=this.source;this.atNewLine=true;this.indent=0;if(this.onNewLine){let e=this.source.indexOf("\n")+1;while(e!==0){this.onNewLine(this.offset+e);e=this.source.indexOf("\n",e)+1}}yield*this.pop();break;default:yield*this.pop();yield*this.step()}}*blockMap(e){const t=e.items[e.items.length-1];switch(this.type){case"newline":this.onKeyLine=false;if(t.value){const s="end"in t.value?t.value.end:void 0;const n=Array.isArray(s)?s[s.length-1]:void 0;n?.type==="comment"?s?.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else t.sep?t.sep.push(this.sourceToken):t.start.push(this.sourceToken);return;case"space":case"comment":if(t.value)e.items.push({start:[this.sourceToken]});else if(t.sep)t.sep.push(this.sourceToken);else{if(this.atIndentedComment(t.start,e.indent)){const s=e.items[e.items.length-2];const n=s?.value?.end;if(Array.isArray(n)){Array.prototype.push.apply(n,t.start);n.push(this.sourceToken);e.items.pop();return}}t.start.push(this.sourceToken)}return}if(this.indent>=e.indent){const s=!this.onKeyLine&&this.indent===e.indent;const n=s&&(t.sep||t.explicitKey)&&this.type!=="seq-item-ind";let i=[];if(n&&t.sep&&!t.value){const s=[];for(let n=0;n<t.sep.length;++n){const i=t.sep[n];switch(i.type){case"newline":s.push(n);break;case"space":break;case"comment":i.indent>e.indent&&(s.length=0);break;default:s.length=0}}s.length>=2&&(i=t.sep.splice(s[1]))}switch(this.type){case"anchor":case"tag":if(n||t.value){i.push(this.sourceToken);e.items.push({start:i});this.onKeyLine=true}else t.sep?t.sep.push(this.sourceToken):t.start.push(this.sourceToken);return;case"explicit-key-ind":if(t.sep||t.explicitKey)if(n||t.value){i.push(this.sourceToken);e.items.push({start:i,explicitKey:true})}else this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken],explicitKey:true}]});else{t.start.push(this.sourceToken);t.explicitKey=true}this.onKeyLine=true;return;case"map-value-ind":if(t.explicitKey)if(t.sep)if(t.value)e.items.push({start:[],key:null,sep:[this.sourceToken]});else if(includesToken(t.sep,"map-value-ind"))this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:i,key:null,sep:[this.sourceToken]}]});else if(isFlowToken(t.key)&&!includesToken(t.sep,"newline")){const e=getFirstKeyStartProps(t.start);const s=t.key;const n=t.sep;n.push(this.sourceToken);delete t.key,delete t.sep;this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:e,key:s,sep:n}]})}else i.length>0?t.sep=t.sep.concat(i,this.sourceToken):t.sep.push(this.sourceToken);else if(includesToken(t.start,"newline"))Object.assign(t,{key:null,sep:[this.sourceToken]});else{const e=getFirstKeyStartProps(t.start);this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:e,key:null,sep:[this.sourceToken]}]})}else t.sep?t.value||n?e.items.push({start:i,key:null,sep:[this.sourceToken]}):includesToken(t.sep,"map-value-ind")?this.stack.push({type:"block-map",offset:this.offset,indent:this.indent,items:[{start:[],key:null,sep:[this.sourceToken]}]}):t.sep.push(this.sourceToken):Object.assign(t,{key:null,sep:[this.sourceToken]});this.onKeyLine=true;return;case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const s=this.flowScalar(this.type);if(n||t.value){e.items.push({start:i,key:s,sep:[]});this.onKeyLine=true}else if(t.sep)this.stack.push(s);else{Object.assign(t,{key:s,sep:[]});this.onKeyLine=true}return}default:{const t=this.startBlockValue(e);if(t){s&&t.type!=="block-seq"&&e.items.push({start:i});this.stack.push(t);return}}}}yield*this.pop();yield*this.step()}*blockSequence(e){const t=e.items[e.items.length-1];switch(this.type){case"newline":if(t.value){const s="end"in t.value?t.value.end:void 0;const n=Array.isArray(s)?s[s.length-1]:void 0;n?.type==="comment"?s?.push(this.sourceToken):e.items.push({start:[this.sourceToken]})}else t.start.push(this.sourceToken);return;case"space":case"comment":if(t.value)e.items.push({start:[this.sourceToken]});else{if(this.atIndentedComment(t.start,e.indent)){const s=e.items[e.items.length-2];const n=s?.value?.end;if(Array.isArray(n)){Array.prototype.push.apply(n,t.start);n.push(this.sourceToken);e.items.pop();return}}t.start.push(this.sourceToken)}return;case"anchor":case"tag":if(t.value||this.indent<=e.indent)break;t.start.push(this.sourceToken);return;case"seq-item-ind":if(this.indent!==e.indent)break;t.value||includesToken(t.start,"seq-item-ind")?e.items.push({start:[this.sourceToken]}):t.start.push(this.sourceToken);return}if(this.indent>e.indent){const t=this.startBlockValue(e);if(t){this.stack.push(t);return}}yield*this.pop();yield*this.step()}*flowCollection(e){const t=e.items[e.items.length-1];if(this.type==="flow-error-end"){let e;do{yield*this.pop();e=this.peek(1)}while(e&&e.type==="flow-collection")}else if(e.end.length===0){switch(this.type){case"comma":case"explicit-key-ind":!t||t.sep?e.items.push({start:[this.sourceToken]}):t.start.push(this.sourceToken);return;case"map-value-ind":!t||t.value?e.items.push({start:[],key:null,sep:[this.sourceToken]}):t.sep?t.sep.push(this.sourceToken):Object.assign(t,{key:null,sep:[this.sourceToken]});return;case"space":case"comment":case"newline":case"anchor":case"tag":!t||t.value?e.items.push({start:[this.sourceToken]}):t.sep?t.sep.push(this.sourceToken):t.start.push(this.sourceToken);return;case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":{const s=this.flowScalar(this.type);!t||t.value?e.items.push({start:[],key:s,sep:[]}):t.sep?this.stack.push(s):Object.assign(t,{key:s,sep:[]});return}case"flow-map-end":case"flow-seq-end":e.end.push(this.sourceToken);return}const s=this.startBlockValue(e);if(s)this.stack.push(s);else{yield*this.pop();yield*this.step()}}else{const t=this.peek(2);if(t.type==="block-map"&&(this.type==="map-value-ind"&&t.indent===e.indent||this.type==="newline"&&!t.items[t.items.length-1].sep)){yield*this.pop();yield*this.step()}else if(this.type==="map-value-ind"&&t.type!=="flow-collection"){const s=getPrevProps(t);const n=getFirstKeyStartProps(s);fixFlowSeqItems(e);const i=e.end.splice(1,e.end.length);i.push(this.sourceToken);const r={type:"block-map",offset:e.offset,indent:e.indent,items:[{start:n,key:e,sep:i}]};this.onKeyLine=true;this.stack[this.stack.length-1]=r}else yield*this.lineEnd(e)}}flowScalar(e){if(this.onNewLine){let e=this.source.indexOf("\n")+1;while(e!==0){this.onNewLine(this.offset+e);e=this.source.indexOf("\n",e)+1}}return{type:e,offset:this.offset,indent:this.indent,source:this.source}}startBlockValue(e){switch(this.type){case"alias":case"scalar":case"single-quoted-scalar":case"double-quoted-scalar":return this.flowScalar(this.type);case"block-scalar-header":return{type:"block-scalar",offset:this.offset,indent:this.indent,props:[this.sourceToken],source:""};case"flow-map-start":case"flow-seq-start":return{type:"flow-collection",offset:this.offset,indent:this.indent,start:this.sourceToken,items:[],end:[]};case"seq-item-ind":return{type:"block-seq",offset:this.offset,indent:this.indent,items:[{start:[this.sourceToken]}]};case"explicit-key-ind":{this.onKeyLine=true;const t=getPrevProps(e);const s=getFirstKeyStartProps(t);s.push(this.sourceToken);return{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:s,explicitKey:true}]}}case"map-value-ind":{this.onKeyLine=true;const t=getPrevProps(e);const s=getFirstKeyStartProps(t);return{type:"block-map",offset:this.offset,indent:this.indent,items:[{start:s,key:null,sep:[this.sourceToken]}]}}}return null}atIndentedComment(e,t){return this.type==="comment"&&(!(this.indent<=t)&&e.every((e=>e.type==="newline"||e.type==="space")))}*documentEnd(e){if(this.type!=="doc-mode"){e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken];this.type==="newline"&&(yield*this.pop())}}*lineEnd(e){switch(this.type){case"comma":case"doc-start":case"doc-end":case"flow-seq-end":case"flow-map-end":case"map-value-ind":yield*this.pop();yield*this.step();break;case"newline":this.onKeyLine=false;case"space":case"comment":default:e.end?e.end.push(this.sourceToken):e.end=[this.sourceToken];this.type==="newline"&&(yield*this.pop())}}}function parseOptions(e){const t=e.prettyErrors!==false;const s=e.lineCounter||t&&new LineCounter||null;return{lineCounter:s,prettyErrors:t}}
/**
 * Parse the input as a stream of YAML documents.
 *
 * Documents should be separated from each other by `...` or `---` marker lines.
 *
 * @returns If an empty `docs` array is returned, it will be of type
 *   EmptyStream and contain additional stream information. In
 *   TypeScript, you should use `'empty' in docs` as a type guard for it.
 */function parseAllDocuments(e,t={}){const{lineCounter:s,prettyErrors:n}=parseOptions(t);const i=new Parser(s?.addNewLine);const r=new Composer(t);const o=Array.from(r.compose(i.parse(e)));if(n&&s)for(const t of o){t.errors.forEach(prettifyError(e,s));t.warnings.forEach(prettifyError(e,s))}return o.length>0?o:Object.assign([],{empty:true},r.streamInfo())}function parseDocument(e,t={}){const{lineCounter:s,prettyErrors:n}=parseOptions(t);const i=new Parser(s?.addNewLine);const r=new Composer(t);let o=null;for(const t of r.compose(i.parse(e),true,e.length))if(o){if(o.options.logLevel!=="silent"){o.errors.push(new YAMLParseError(t.range.slice(0,2),"MULTIPLE_DOCS","Source contains multiple documents; please use YAML.parseAllDocuments()"));break}}else o=t;if(n&&s){o.errors.forEach(prettifyError(e,s));o.warnings.forEach(prettifyError(e,s))}return o}function parse(e,t,s){let n;typeof t==="function"?n=t:s===void 0&&t&&typeof t==="object"&&(s=t);const i=parseDocument(e,s);if(!i)return null;i.warnings.forEach((e=>M(i.options.logLevel,e)));if(i.errors.length>0){if(i.options.logLevel!=="silent")throw i.errors[0];i.errors=[]}return i.toJS(Object.assign({reviver:n},s))}function stringify(e,t,s){let n=null;typeof t==="function"||Array.isArray(t)?n=t:s===void 0&&t&&(s=t);typeof s==="string"&&(s=s.length);if(typeof s==="number"){const e=Math.round(s);s=e<1?void 0:e>8?{indent:8}:{indent:e}}if(e===void 0){const{keepUndefined:e}=s??t??{};if(!e)return}return new Document(e,n,s).toString(s)}var Be=Object.freeze(Object.defineProperty({__proto__:null,Alias:O,CST:xe,Composer:Composer,Document:Document,Lexer:Lexer,LineCounter:LineCounter,Pair:f,Parser:Parser,Scalar:s,Schema:Schema,YAMLError:YAMLError,YAMLMap:d,YAMLParseError:YAMLParseError,YAMLSeq:h,YAMLWarning:YAMLWarning,isAlias:$,isCollection:_,isDocument:q,isMap:u,isNode:e,isPair:l,isScalar:y,isSeq:c,parse:parse,parseAllDocuments:parseAllDocuments,parseDocument:parseDocument,stringify:stringify,visit:t,visitAsync:K},Symbol.toStringTag,{value:"Module"}));export{O as Alias,xe as CST,Composer,Document,Lexer,LineCounter,f as Pair,Parser,s as Scalar,Schema,YAMLError,d as YAMLMap,YAMLParseError,h as YAMLSeq,YAMLWarning,Be as default,$ as isAlias,_ as isCollection,q as isDocument,u as isMap,e as isNode,l as isPair,y as isScalar,c as isSeq,parse,parseAllDocuments,parseDocument,stringify,t as visit,K as visitAsync};

