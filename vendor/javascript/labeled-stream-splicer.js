import e from"stream-splicer";import t from"inherits";var r="undefined"!==typeof globalThis?globalThis:"undefined"!==typeof self?self:global;var i={};var n=e;var a=t;i=Labeled;a(Labeled,n);i.obj=function(e,t){t||(t={});t.objectMode=true;return new Labeled(e,t)};function Labeled(e,t){if(!((this||r)instanceof Labeled))return new Labeled(e,t);n.call(this||r,[],t);var i=[];for(var a=0;a<e.length;a++){var o=e[a];if("string"!==typeof o){Array.isArray(o)&&(o=new Labeled(o,t));a>=0&&"string"===typeof e[a-1]&&(o.label=e[a-1]);i.push(o)}}"string"===typeof e[a-1]&&i.push(new Labeled([],t));(this||r).splice.apply(this||r,[0,0].concat(i))}Labeled.prototype.indexOf=function(e){if("string"===typeof e){for(var t=0;t<(this||r)._streams.length;t++)if((this||r)._streams[t].label===e)return t;return-1}return n.prototype.indexOf.call(this||r,e)};Labeled.prototype.get=function(e){if("string"===typeof e){var t=this.indexOf(e);if(t<0)return;return(this||r)._streams[t]}return n.prototype.get.call(this||r,e)};Labeled.prototype.splice=function(e){var t;t="string"===typeof e?this.indexOf(e):e;var i=[t].concat([].slice.call(arguments,1));return n.prototype.splice.apply(this||r,i)};var o=i;const l=i.obj;export default o;export{l as obj};

