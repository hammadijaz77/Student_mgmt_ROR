import e from"defer-to-connect";import o from"process";var t={};var n=o;Object.defineProperty(t,"__esModule",{value:true});const s=e;const r=Number(n.versions.node.split(".")[0]);const timer=e=>{const o={start:Date.now(),socket:void 0,lookup:void 0,connect:void 0,secureConnect:void 0,upload:void 0,response:void 0,end:void 0,error:void 0,abort:void 0,phases:{wait:void 0,dns:void 0,tcp:void 0,tls:void 0,request:void 0,firstByte:void 0,download:void 0,total:void 0}};e.timings=o;const handleError=e=>{const t=e.emit.bind(e);e.emit=(n,...s)=>{if("error"===n){o.error=Date.now();o.phases.total=o.error-o.start;e.emit=t}return t(n,...s)}};handleError(e);e.prependOnceListener("abort",()=>{o.abort=Date.now();(!o.response||r>=13)&&(o.phases.total=Date.now()-o.start)});const onSocket=e=>{o.socket=Date.now();o.phases.wait=o.socket-o.start;const lookupListener=()=>{o.lookup=Date.now();o.phases.dns=o.lookup-o.socket};e.prependOnceListener("lookup",lookupListener);s.default(e,{connect:()=>{o.connect=Date.now();if(void 0===o.lookup){e.removeListener("lookup",lookupListener);o.lookup=o.connect;o.phases.dns=o.lookup-o.socket}o.phases.tcp=o.connect-o.lookup},secureConnect:()=>{o.secureConnect=Date.now();o.phases.tls=o.secureConnect-o.connect}})};e.socket?onSocket(e.socket):e.prependOnceListener("socket",onSocket);const onUpload=()=>{var e;o.upload=Date.now();o.phases.request=o.upload-(e=o.secureConnect,null!==e&&void 0!==e?e:o.connect)};const writableFinished=()=>"boolean"===typeof e.writableFinished?e.writableFinished:e.finished&&0===e.outputSize&&(!e.socket||0===e.socket.writableLength);writableFinished()?onUpload():e.prependOnceListener("finish",onUpload);e.prependOnceListener("response",e=>{o.response=Date.now();o.phases.firstByte=o.response-o.upload;e.timings=o;handleError(e);e.prependOnceListener("end",()=>{o.end=Date.now();o.phases.download=o.end-o.response;o.phases.total=o.end-o.start})});return o};t.default=timer;t=timer;t.default=timer;var c=t;const i=t.__esModule;export default c;export{i as __esModule};

