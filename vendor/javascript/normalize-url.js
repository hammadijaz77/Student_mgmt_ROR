var e={};const t="text/plain";const r="us-ascii";const testParameter=(e,t)=>t.some((t=>t instanceof RegExp?t.test(e):t===e));const normalizeDataURL=(e,{stripHash:a})=>{const o=/^data:(?<type>[^,]*?),(?<data>[^#]*?)(?:#(?<hash>.*))?$/.exec(e);if(!o)throw new Error(`Invalid URL: ${e}`);let{type:s,data:n,hash:i}=o.groups;const h=s.split(";");i=a?"":i;let p=false;if("base64"===h[h.length-1]){h.pop();p=true}const c=(h.shift()||"").toLowerCase();const l=h.map((e=>{let[t,a=""]=e.split("=").map((e=>e.trim()));if("charset"===t){a=a.toLowerCase();if(a===r)return""}return`${t}${a?`=${a}`:""}`})).filter(Boolean);const m=[...l];p&&m.push("base64");(0!==m.length||c&&c!==t)&&m.unshift(c);return`data:${m.join(";")},${p?n.trim():n}${i?`#${i}`:""}`};const normalizeUrl=(e,t)=>{t={defaultProtocol:"http:",normalizeProtocol:true,forceHttp:false,forceHttps:false,stripAuthentication:true,stripHash:false,stripTextFragment:true,stripWWW:true,removeQueryParameters:[/^utm_\w+/i],removeTrailingSlash:true,removeSingleSlash:true,removeDirectoryIndex:false,sortQueryParameters:true,...t};e=e.trim();if(/^data:/i.test(e))return normalizeDataURL(e,t);if(/^view-source:/i.test(e))throw new Error("`view-source:` is not supported as it is a non-standard protocol");const r=e.startsWith("//");const a=!r&&/^\.*\//.test(e);a||(e=e.replace(/^(?!(?:\w+:)?\/\/)|^\/\//,t.defaultProtocol));const o=new URL(e);if(t.forceHttp&&t.forceHttps)throw new Error("The `forceHttp` and `forceHttps` options cannot be used together");t.forceHttp&&"https:"===o.protocol&&(o.protocol="http:");t.forceHttps&&"http:"===o.protocol&&(o.protocol="https:");if(t.stripAuthentication){o.username="";o.password=""}t.stripHash?o.hash="":t.stripTextFragment&&(o.hash=o.hash.replace(/#?:~:text.*?$/i,""));o.pathname&&(o.pathname=o.pathname.replace(/(?<!\b(?:[a-z][a-z\d+\-.]{1,50}:))\/{2,}/g,"/"));if(o.pathname)try{o.pathname=decodeURI(o.pathname)}catch(e){}true===t.removeDirectoryIndex&&(t.removeDirectoryIndex=[/^index\.[a-z]+$/]);if(Array.isArray(t.removeDirectoryIndex)&&t.removeDirectoryIndex.length>0){let e=o.pathname.split("/");const r=e[e.length-1];if(testParameter(r,t.removeDirectoryIndex)){e=e.slice(0,e.length-1);o.pathname=e.slice(1).join("/")+"/"}}if(o.hostname){o.hostname=o.hostname.replace(/\.$/,"");t.stripWWW&&/^www\.(?!www\.)(?:[a-z\-\d]{1,63})\.(?:[a-z.\-\d]{2,63})$/.test(o.hostname)&&(o.hostname=o.hostname.replace(/^www\./,""))}if(Array.isArray(t.removeQueryParameters))for(const e of[...o.searchParams.keys()])testParameter(e,t.removeQueryParameters)&&o.searchParams.delete(e);true===t.removeQueryParameters&&(o.search="");t.sortQueryParameters&&o.searchParams.sort();t.removeTrailingSlash&&(o.pathname=o.pathname.replace(/\/$/,""));const s=e;e=o.toString();t.removeSingleSlash||"/"!==o.pathname||s.endsWith("/")||""!==o.hash||(e=e.replace(/\/$/,""));(t.removeTrailingSlash||"/"===o.pathname)&&""===o.hash&&t.removeSingleSlash&&(e=e.replace(/\/$/,""));r&&!t.normalizeProtocol&&(e=e.replace(/^http:\/\//,"//"));t.stripProtocol&&(e=e.replace(/^(?:https?:)?\/\//,""));return e};e=normalizeUrl;var a=e;export default a;

