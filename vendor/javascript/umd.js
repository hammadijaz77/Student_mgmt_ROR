var e={};var t='(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}defineNamespace()}})(function(){source()});\n';function template(e,n){"boolean"===typeof n?n={commonJS:n}:n||(n={});var o=t.replace(/defineNamespace\(\)/g,compileNamespace(e)).split("source()");o[0]=o[0].trim();o[0]+="var define,module,exports;";n.commonJS&&(o[0]+="module={exports:(exports={})};");o[0]+="\n";n.commonJS&&(o[1]="return module.exports;"+o[1]);o[1]="\n"+o[1];return o}e=e=function(t,n,o){if("string"===typeof o&&"object"===typeof n){var r=o;o=n;n=r}return e.prelude(t,o)+n+e.postlude(t,o)};e.prelude=function(e,t){return template(e,t)[0]};e.postlude=function(e,t){return template(e,t)[1]};function camelCase(e){e=e.replace(/\-([a-z])/g,(function(e,t){return t.toUpperCase()}));/^[a-zA-Z_$]$/.test(e[0])||(e=e.substr(1));var t=e.replace(/[^\w$]+/g,"");if(!t)throw new Error("Invalid JavaScript identifier resulted from camel-casing");return t}function compileNamespace(e){var t=e.split(".");if(1===t.length)return"g."+camelCase(e)+" = f()";if(2===t.length){t=t.map(camelCase);return"(g."+t[0]+" || (g."+t[0]+" = {}))."+t[1]+" = f()"}var n=t.pop();return t.map(compileNamespaceStep).concat(["g."+camelCase(n)+" = f()"]).join(";")}function compileNamespaceStep(e){e=camelCase(e);return"g=(g."+e+"||(g."+e+" = {}))"}var n=e;const o=e.prelude,r=e.postlude;export default n;export{r as postlude,o as prelude};

