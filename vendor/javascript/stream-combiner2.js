import r from"readable-stream";import e from"duplexer2";var n={};var t=r.PassThrough;var o=r.Readable;var a=e;n=function(){var r;r=1==arguments.length&&Array.isArray(arguments[0])?arguments[0]:[].slice.call(arguments);return combine(r)};n.obj=function(){var r;r=1==arguments.length&&Array.isArray(arguments[0])?arguments[0]:[].slice.call(arguments);return combine(r,{objectMode:true})};function combine(r,e){for(var n=0;n<r.length;n++)r[n]=wrap(r[n],e);if(0==r.length)return new t(e);if(1==r.length)return r[0];var o=r[0],i=r[r.length-1],l=a(e,o,i);function recurse(r){if(!(r.length<2)){r[0].pipe(r[1]);recurse(r.slice(1))}}recurse(r);function onerror(){var r=[].slice.call(arguments);r.unshift("error");l.emit.apply(l,r)}for(var n=1;n<r.length-1;n++)r[n].on("error",onerror);return l}function wrap(r,e){return"function"===typeof r.read?r:new o(e).wrap(r)}var i=n;const l=n.obj;export default i;export{l as obj};

